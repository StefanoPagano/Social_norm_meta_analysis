mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "<br>","Both = ", n_both, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
visNetwork(Nodes, Edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
library(readr)
library(igraph)
library(visNetwork)
library(dplyr)
require(shiny)
require(stringr)
rm(list=ls())
authors_net <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL") %>%
subset.data.frame(subset = Method_elicitation =="KW" |
Method_elicitation =="Bicchieri" |
Method_elicitation =="Both") %>%
distinct(PaperID, .keep_all = T) %>%
mutate(New_authors = str_replace_all(Authors, ";", "--"))
authors_n <- authors_net[grep("--", authors_net$New_authors), ]
authors_n$numberoauthors <- (1+str_count(authors_n$New_authors, "--"))
authors_solo <- authors_net[-grep("--", authors_net$New_authors), ]
# data wrangling from https://stackoverflow.com/questions/57487704/how-to-split-a-string-of-author-names-by-comma-into-a-data-frame-and-generate-an
SplitAuthors <- sapply(authors_n$New_authors, strsplit, split = "--", fixed = TRUE)
AuthorCombinations <- sapply(SplitAuthors,function(x){combn(unlist(x),m = 2)})
AuthorEdges <- rapply(AuthorCombinations,unlist)
names(AuthorEdges) <- NULL
AuthorEdges <- trimws(AuthorEdges)
AuthorGraph <- graph(AuthorEdges, directed = FALSE)
# method KW
l_method <- list()
for(i in 1:length(authors_n$Method_elicitation)){
l_method[[i]] <- data.frame(id=SplitAuthors[[i]], method=rep(authors_n$Method_elicitation[i],authors_n$numberoauthors[i]))
}
l_method_sum <- do.call(rbind, l_method) %>% group_by(id) %>% summarise(n_KW=sum(method=="KW")+sum(method=="Both"),n_BX=sum(method=="Bicchieri")+sum(method=="Both")) %>% mutate(d=(n_KW-n_BX)/(n_KW+n_BX))
#plot(AuthorGraph,layout = layout_with_graphopt, edge.arrow.size = 0.2, vertex.cex = 0.7, mode = "circle")
Nodes <- data.frame(id=as_ids(V(AuthorGraph)), label=as_ids(V(AuthorGraph))) %>%
merge.data.frame(l_method_sum) %>%
mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
visNetwork(Nodes, Edges) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
---
title: "networkof authors"
author: "Andrea Guido"
date: "7/23/2021"
output: html_document
---
```{r setup, include=FALSE, echo=FALSE}
library(readr)
library(igraph)
library(visNetwork)
library(dplyr)
require(shiny)
require(stringr)
require(read_excel)
rm(list=ls())
authors_net <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL") %>%
subset.data.frame(subset = Method_elicitation =="KW" |
Method_elicitation =="Bicchieri" |
Method_elicitation =="Both") %>%
distinct(PaperID, .keep_all = T) %>%
mutate(New_authors = str_replace_all(Authors, ";", "--"))
authors_n <- authors_net[grep("--", authors_net$New_authors), ]
authors_n$numberoauthors <- (1+str_count(authors_n$New_authors, "--"))
authors_solo <- authors_net[-grep("--", authors_net$New_authors), ]
# data wrangling from https://stackoverflow.com/questions/57487704/how-to-split-a-string-of-author-names-by-comma-into-a-data-frame-and-generate-an
SplitAuthors <- sapply(authors_n$New_authors, strsplit, split = "--", fixed = TRUE)
AuthorCombinations <- sapply(SplitAuthors,function(x){combn(unlist(x),m = 2)})
AuthorEdges <- rapply(AuthorCombinations,unlist)
names(AuthorEdges) <- NULL
AuthorEdges <- trimws(AuthorEdges)
AuthorGraph <- graph(AuthorEdges, directed = FALSE)
# method KW
l_method <- list()
for(i in 1:length(authors_n$Method_elicitation)){
l_method[[i]] <- data.frame(id=SplitAuthors[[i]], method=rep(authors_n$Method_elicitation[i],authors_n$numberoauthors[i]))
}
l_method_sum <- do.call(rbind, l_method) %>% group_by(id) %>% summarise(n_KW=sum(method=="KW")+sum(method=="Both"),n_BX=sum(method=="Bicchieri")+sum(method=="Both")) %>% mutate(d=(n_KW-n_BX)/(n_KW+n_BX))
#plot(AuthorGraph,layout = layout_with_graphopt, edge.arrow.size = 0.2, vertex.cex = 0.7, mode = "circle")
Nodes <- data.frame(id=as_ids(V(AuthorGraph)), label=as_ids(V(AuthorGraph))) %>%
merge.data.frame(l_method_sum) %>%
mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
plot_net <- visNetwork(Nodes, Edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
```
```{r pressure, echo=FALSE}
plot_net
```
---
title: "networkof authors"
author: "Andrea Guido"
date: "7/23/2021"
output: html_document
---
```{r setup, include=FALSE, echo=FALSE}
library(readr)
library(igraph)
library(visNetwork)
library(dplyr)
require(shiny)
require(stringr)
require(readxl)
rm(list=ls())
authors_net <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL") %>%
subset.data.frame(subset = Method_elicitation =="KW" |
Method_elicitation =="Bicchieri" |
Method_elicitation =="Both") %>%
distinct(PaperID, .keep_all = T) %>%
mutate(New_authors = str_replace_all(Authors, ";", "--"))
authors_n <- authors_net[grep("--", authors_net$New_authors), ]
authors_n$numberoauthors <- (1+str_count(authors_n$New_authors, "--"))
authors_solo <- authors_net[-grep("--", authors_net$New_authors), ]
# data wrangling from https://stackoverflow.com/questions/57487704/how-to-split-a-string-of-author-names-by-comma-into-a-data-frame-and-generate-an
SplitAuthors <- sapply(authors_n$New_authors, strsplit, split = "--", fixed = TRUE)
AuthorCombinations <- sapply(SplitAuthors,function(x){combn(unlist(x),m = 2)})
AuthorEdges <- rapply(AuthorCombinations,unlist)
names(AuthorEdges) <- NULL
AuthorEdges <- trimws(AuthorEdges)
AuthorGraph <- graph(AuthorEdges, directed = FALSE)
# method KW
l_method <- list()
for(i in 1:length(authors_n$Method_elicitation)){
l_method[[i]] <- data.frame(id=SplitAuthors[[i]], method=rep(authors_n$Method_elicitation[i],authors_n$numberoauthors[i]))
}
l_method_sum <- do.call(rbind, l_method) %>% group_by(id) %>% summarise(n_KW=sum(method=="KW")+sum(method=="Both"),n_BX=sum(method=="Bicchieri")+sum(method=="Both")) %>% mutate(d=(n_KW-n_BX)/(n_KW+n_BX))
#plot(AuthorGraph,layout = layout_with_graphopt, edge.arrow.size = 0.2, vertex.cex = 0.7, mode = "circle")
Nodes <- data.frame(id=as_ids(V(AuthorGraph)), label=as_ids(V(AuthorGraph))) %>%
merge.data.frame(l_method_sum) %>%
mutate(color = ifelse(d < -.5, "blue",ifelse(d < -.01, "grey", ifelse(d < .5, "green", "red")))) %>%
mutate(title = paste0("<p><b>", id,"</b><br>","Bicchieri = ", n_BX, "<br> Krupka = ", n_KW, "</p>"))
Edges <- data.frame(matrix(AuthorEdges, ncol=2, byrow = T))
colnames(Edges) <- c("from", "to")
plot_net <- visNetwork(Nodes, Edges) %>%
#visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled = T, hover = T),
nodesIdSelection = T)
```
```{r pressure, echo=FALSE}
plot_net
```
library(tidyverse)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
summarise(PaperID) %>%
distinct(PaperID, .keep_all = T)
library(tidyverse)
library(readxl)
#library(writexl)
rm(list = ls())
Social_Norms_meta <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL")
csv_path_output <- "C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Other/Report_202107/"
ls_game <- c("DG", "DG Tax", "UG", "PGG", "TG", "BG", "GEG", "PDG", "Donation Game", "Investment game", "ToG", "Tax Game", "CPR", "Lying DG", "Third-Party Lying DG")
#### Treatments stats ####
df_treat <- Social_Norms_meta %>%
subset.data.frame(subset = Target == "Y") %>%
subset.data.frame(subset = Game_type %in% ls_game) %>%
group_by(Game_type) %>%
summarise(
Treatments = n(),
Between_subjects_beliefs = sum(Separate_sample_beliefs == "Y", na.rm = T),
KW = sum(Method_elicitation == "KW", na.rm = T),
Bicchieri = sum(Method_elicitation == "Bicchieri", na.rm = T),
KW_Bicchieri = sum(Method_elicitation == "Both", na.rm = T),
Monetary_Punishment = sum(Punishment == "Monetary", na.rm = T),
Choice_Method_Direct = sum(Choice_Method == "Direct", na.rm = T),
Choice_Method_Strategy = sum(Choice_Method == "Strategy", na.rm = T),
OnlyNorms = sum(Choice_Method == "OnlyNorms", na.rm = T),
Choice_Method_Both = sum(Choice_Method == "Both", na.rm = T),
Available_Data = sum(StatusTreatment_Roma == "6-Complete", na.rm = T)
) %>%
arrange(-Treatments)
write.csv(df_treat, file = paste(csv_path_output, paste("Treatments.csv", sep = ""), sep = ""), row.names = F)
#### Data collection status per treatment####
df_data <- Social_Norms_meta %>%
group_by(StatusTreatment_Roma) %>%
summarise(
N_treatments = n(),
) %>%
replace_na(list(StatusTreatment_Roma  = "Duplicates"))
write.csv(df_data, file = paste(csv_path_output, paste("Data Collection.csv", sep = ""), sep = ""), row.names = F)
#### Paper Search and Selection - (Slide 3) ####
T_paper_sel = Social_Norms_meta %>% subset.data.frame(subset = Target == "Y")
N_Paper = length(levels(as.factor(T_paper_sel$PaperID)))
Tot_Treatment <- df_treat %>% summarise(sum(Treatments))
paste("Total number of papers: ", N_Paper)
paste("Total number of treatments: ", Tot_Treatment)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
summarise(PaperID) %>%
distinct(PaperID, .keep_all = T)
View(df_year)
#### Papers per year ####
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
summarise(count(PaperID)) %>%
distinct(PaperID, .keep_all = T)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
summarise(count(PaperID)) %>%
distinct(PaperID, .keep_all = T)
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T)
View(df_year)
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(PaperID))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(as.integer(Year)) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(PaperID))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(as.integer(Year)) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(as.integer(PaperID)))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(as.integer(PaperID)))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(as.integer(PaperID)), na.rm = T)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(Year))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(as.integer(Year)))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, as.integer(Year))) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(count(as.integer(Year)))
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(n = n())
View(df_year)
plot_year <- barplot(df_year, main="Car Distribution",
xlab="Number of Gears")
library(ggplot2)
plot_year <- ggplot(df_year, aes(x=Year, y=n)) +
geom_bar(stat = "identity")
plot_year <- ggplot(df_year, aes(x=as.integer(Year), y=n)) +
geom_bar(stat = "identity")
plot_year <- ggplot(df_year, aes(x=as.integer(Year), y=n))
plot_year <- ggplot(df_year, aes(x=as.integer(Year), y=n)) +
geom_bar(stat = "identity")
library(tidyverse)
library(readxl)
library(ggplot2)
#library(writexl)
rm(list = ls())
# Insert excel file path
Social_Norms_meta <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL")
csv_path_output <- "C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Other/Report_202107/"
# List of Games
ls_game <- c("DG", "DG Tax", "UG", "PGG", "TG", "BG", "GEG", "PDG", "Donation Game", "Investment game", "ToG", "Tax Game", "CPR", "Lying DG", "Third-Party Lying DG")
#### Treatments stats ####
df_treat <- Social_Norms_meta %>%
subset.data.frame(subset = Target == "Y") %>%
subset.data.frame(subset = Game_type %in% ls_game) %>%
group_by(Game_type) %>%
summarise(
Treatments = n(),
Between_subjects_beliefs = sum(Separate_sample_beliefs == "Y", na.rm = T),
KW = sum(Method_elicitation == "KW", na.rm = T),
Bicchieri = sum(Method_elicitation == "Bicchieri", na.rm = T),
KW_Bicchieri = sum(Method_elicitation == "Both", na.rm = T),
Monetary_Punishment = sum(Punishment == "Monetary", na.rm = T),
Choice_Method_Direct = sum(Choice_Method == "Direct", na.rm = T),
Choice_Method_Strategy = sum(Choice_Method == "Strategy", na.rm = T),
OnlyNorms = sum(Choice_Method == "OnlyNorms", na.rm = T),
Choice_Method_Both = sum(Choice_Method == "Both", na.rm = T),
Available_Data = sum(StatusTreatment_Roma == "6-Complete", na.rm = T)
) %>%
arrange(-Treatments)
write.csv(df_treat, file = paste(csv_path_output, paste("Treatments.csv", sep = ""), sep = ""), row.names = F)
#### Data collection status per treatment####
df_data <- Social_Norms_meta %>%
group_by(StatusTreatment_Roma) %>%
summarise(
N_treatments = n(),
) %>%
replace_na(list(StatusTreatment_Roma  = "Duplicates"))
write.csv(df_data, file = paste(csv_path_output, paste("Data Collection.csv", sep = ""), sep = ""), row.names = F)
#### Paper Search and Selection - (Slide 3) ####
T_paper_sel = Social_Norms_meta %>% subset.data.frame(subset = Target == "Y")
N_Paper = length(levels(as.factor(T_paper_sel$PaperID)))
Tot_Treatment <- df_treat %>% summarise(sum(Treatments))
paste("Total number of papers: ", N_Paper)
paste("Total number of treatments: ", Tot_Treatment)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(n = n())
plot_year <- ggplot(df_year, aes(x=as.integer(Year), y=n)) +
geom_bar(stat = "identity")
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat = "identity")
View(plot_year)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(n = n())
plot_year <- ggplot(df_year, aes(df_year$Year, df_year$n)) +
geom_bar(stat = "identity")
View(df_year)
library(tidyverse)
library(readxl)
library(ggplot2)
#library(writexl)
rm(list = ls())
# Insert excel file path
Social_Norms_meta <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL")
csv_path_output <- "C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Other/Report_202107/"
# List of Games
ls_game <- c("DG", "DG Tax", "UG", "PGG", "TG", "BG", "GEG", "PDG", "Donation Game", "Investment game", "ToG", "Tax Game", "CPR", "Lying DG", "Third-Party Lying DG")
#### Treatments stats ####
df_treat <- Social_Norms_meta %>%
subset.data.frame(subset = Target == "Y") %>%
subset.data.frame(subset = Game_type %in% ls_game) %>%
group_by(Game_type) %>%
summarise(
Treatments = n(),
Between_subjects_beliefs = sum(Separate_sample_beliefs == "Y", na.rm = T),
KW = sum(Method_elicitation == "KW", na.rm = T),
Bicchieri = sum(Method_elicitation == "Bicchieri", na.rm = T),
KW_Bicchieri = sum(Method_elicitation == "Both", na.rm = T),
Monetary_Punishment = sum(Punishment == "Monetary", na.rm = T),
Choice_Method_Direct = sum(Choice_Method == "Direct", na.rm = T),
Choice_Method_Strategy = sum(Choice_Method == "Strategy", na.rm = T),
OnlyNorms = sum(Choice_Method == "OnlyNorms", na.rm = T),
Choice_Method_Both = sum(Choice_Method == "Both", na.rm = T),
Available_Data = sum(StatusTreatment_Roma == "6-Complete", na.rm = T)
) %>%
arrange(-Treatments)
write.csv(df_treat, file = paste(csv_path_output, paste("Treatments.csv", sep = ""), sep = ""), row.names = F)
#### Data collection status per treatment####
df_data <- Social_Norms_meta %>%
group_by(StatusTreatment_Roma) %>%
summarise(
N_treatments = n(),
) %>%
replace_na(list(StatusTreatment_Roma  = "Duplicates"))
write.csv(df_data, file = paste(csv_path_output, paste("Data Collection.csv", sep = ""), sep = ""), row.names = F)
#### Paper Search and Selection - (Slide 3) ####
T_paper_sel = Social_Norms_meta %>% subset.data.frame(subset = Target == "Y")
N_Paper = length(levels(as.factor(T_paper_sel$PaperID)))
Tot_Treatment <- df_treat %>% summarise(sum(Treatments))
paste("Total number of papers: ", N_Paper)
paste("Total number of treatments: ", Tot_Treatment)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(n = n())
plot_year <- ggplot(df_year, aes(df_year$Year, df_year$n)) +
geom_bar(stat = "identity")
View(plot_year)
View(df_year)
plot_year <- ggplot(df_year, aes(df_year$Year, df_year$n))
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat = "identity")
View(plot_year)
View(df_year)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat = "identity")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(tidyverse)
library(readxl)
library(ggplot2)
#library(writexl)
rm(list = ls())
# Insert excel file path
Social_Norms_meta <- read_excel("G:/.shortcut-targets-by-id/1IoJDOQWCFiL1qTzSja6byrAlCelNSTsT/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL")
csv_path_output <- "C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Other/Report_202107/"
# List of Games
ls_game <- c("DG", "DG Tax", "UG", "PGG", "TG", "BG", "GEG", "PDG", "Donation Game", "Investment game", "ToG", "Tax Game", "CPR", "Lying DG", "Third-Party Lying DG")
#### Treatments stats ####
df_treat <- Social_Norms_meta %>%
subset.data.frame(subset = Target == "Y") %>%
subset.data.frame(subset = Game_type %in% ls_game) %>%
group_by(Game_type) %>%
summarise(
Treatments = n(),
Between_subjects_beliefs = sum(Separate_sample_beliefs == "Y", na.rm = T),
KW = sum(Method_elicitation == "KW", na.rm = T),
Bicchieri = sum(Method_elicitation == "Bicchieri", na.rm = T),
KW_Bicchieri = sum(Method_elicitation == "Both", na.rm = T),
Monetary_Punishment = sum(Punishment == "Monetary", na.rm = T),
Choice_Method_Direct = sum(Choice_Method == "Direct", na.rm = T),
Choice_Method_Strategy = sum(Choice_Method == "Strategy", na.rm = T),
OnlyNorms = sum(Choice_Method == "OnlyNorms", na.rm = T),
Choice_Method_Both = sum(Choice_Method == "Both", na.rm = T),
Available_Data = sum(StatusTreatment_Roma == "6-Complete", na.rm = T)
) %>%
arrange(-Treatments)
write.csv(df_treat, file = paste(csv_path_output, paste("Treatments.csv", sep = ""), sep = ""), row.names = F)
#### Data collection status per treatment####
df_data <- Social_Norms_meta %>%
group_by(StatusTreatment_Roma) %>%
summarise(
N_treatments = n(),
) %>%
replace_na(list(StatusTreatment_Roma  = "Duplicates"))
write.csv(df_data, file = paste(csv_path_output, paste("Data Collection.csv", sep = ""), sep = ""), row.names = F)
#### Paper Search and Selection - (Slide 3) ####
T_paper_sel = Social_Norms_meta %>% subset.data.frame(subset = Target == "Y")
N_Paper = length(levels(as.factor(T_paper_sel$PaperID)))
Tot_Treatment <- df_treat %>% summarise(sum(Treatments))
paste("Total number of papers: ", N_Paper)
paste("Total number of treatments: ", Tot_Treatment)
#### Papers per year ####
df_year <- Social_Norms_meta %>% subset.data.frame(select = c(PaperID, Year)) %>%
group_by(Year) %>%
distinct(PaperID, .keep_all = T) %>%
summarise(n = n())
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat = "identity")
View(plot_year)
plot_year
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat = "identity") +
labs(x="Year",
y="Number of papers",
title = "Papers per Year",
caption = "Data from Social Norms meta.xlsx")
plot_year
plot_year <- ggplot(df_year, aes(Year, n), color = red) +
geom_bar(stat = "identity") +
labs(x="Year",
y="Number of papers",
title = "Papers per Year",
caption = "Data from Social Norms meta.xlsx")
plot_year
plot_year <- ggplot(df_year, aes(Year, n), color = red) +
geom_bar() +
labs(x="Year",
y="Number of papers",
title = "Papers per Year",
caption = "Data from Social Norms meta.xlsx")
plot_year
plot_year <- ggplot(df_year, aes(Year, n), color = red) +
geom_bar(stat="identity") +
labs(x="Year",
y="Number of papers",
title = "Papers per Year",
caption = "Data from Social Norms meta.xlsx")
plot_year
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat="identity", color = red) +
labs(x="Year",
y="Number of papers",
title = "Papers per Year",
caption = "Data from Social Norms meta.xlsx")
plot_year
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat="identity", fill = "#FF6666") +
labs(x="Year",
y="Number of papers",
title = "Papers per Year",
caption = "Data from Social Norms meta.xlsx")
plot_year
plot_year <- ggplot(df_year, aes(Year, n)) +
geom_bar(stat="identity", fill = "#FF6666") +
labs(x="Year",
y="Number of papers",
caption = "Data from Social Norms meta.xlsx")
plot_year
