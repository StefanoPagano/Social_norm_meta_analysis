wilc_strength = wilcox.test(Norm_Strength ~ Macro_game_type, data = master_test)
wilc_coop = wilcox.test(Avg_coop ~ Macro_game_type, data = master_test)
wilc_norm = wilcox.test(Avg_NE ~ Macro_game_type, data = master_test)
wilc_norm
wilc_delta = wilcox.test(Delta ~ Game_type, data=master_test)
wilc_strength = wilcox.test(Norm_Strength ~ Game_type, data = master_test)
wilc_coop = wilcox.test(Avg_coop ~ Game_type, data = master_test)
wilc_norm = wilcox.test(Avg_NE ~ Game_type, data = master_test)
hp4plus_mean <- hp4_mean %>% add_row(Game_type = "Difference (M.W.W. p-value)", Coop = wilc_coop$p.value, Avg_Norm = wilc_norm$p.value, Delta = wilc_delta$p.value, Strength = wilc_strength$p.value)
hp4plus_mean
wilc_norm
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(ggpubr)
library(survival)
library(sjPlot)
library(kableExtra)
library(car)
library(DT)
library(zoo)
setwd("../")
# read data
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(Macro_game_type = ifelse(Game_type %in% c("DG","Donation Game"), "DG and Donation Game", Game_type), SD_NE=sqrt(Var_NE)) %>%
subset.data.frame(subset = !(Standard_game %in% c("N")))
cor.test(master$Avg_NE, master$Avg_coop, method= "spearman", exact = F)
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) + geom_point() + geom_smooth(method = "lm") + ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") + stat_cor(method = "spearman") + xlab("Cooperation Norm (as % of endowment)") + ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) + geom_point() + geom_smooth(method = "lm") + ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") + facet_wrap(~Macro_game_type, ncol=3) + stat_cor(method = "spearman")
master
# specificity = mean of max deviation
# consistency = sqrt(Var_NE)
master = master %>% mutate(consistency= 1/(sqrt(Var_NE)),
Norm_Strength = consistency + specificity_plus,
Delta = (Avg_NE-Avg_coop)/Avg_NE)
master
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(ggpubr)
library(survival)
library(sjPlot)
library(kableExtra)
library(car)
library(DT)
library(zoo)
setwd("../")
# read data
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(Macro_game_type = ifelse(Game_type %in% c("DG","Donation Game"), "DG and Donation Game", Game_type), SD_NE=sqrt(Var_NE)) %>%
subset.data.frame(subset = !(Standard_game %in% c("N")))
cor.test(master$Avg_NE, master$Avg_coop, method= "spearman", exact = F)
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) + geom_point() + geom_smooth(method = "lm") + ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") + stat_cor(method = "spearman") + xlab("Cooperation Norm (as % of endowment)") + ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) + geom_point() + geom_smooth(method = "lm") + ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") + facet_wrap(~Macro_game_type, ncol=3) + stat_cor(method = "spearman")
# specificity = mean of max deviation
# consistency = sqrt(Var_NE)
master = master %>% mutate(consistency= 1/(sqrt(Var_NE)),
Norm_Strength = consistency + specificity_plus,
Delta = (Avg_NE-Avg_coop)/Avg_NE)
summary(master$Norm_Strength)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=Norm_Strength)) +
geom_histogram(bins = 7, col=I("black")) + ggtitle("Histogram of Norm Strength") + xlab("Strength Norm") + facet_wrap(~Game_type)
cor.test(master$Norm_Strength, master$Delta, method= "spearman", exact = F)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=Norm_Strength, y=Delta)) + geom_point() + geom_smooth(method = "lm") + stat_cor(method = "spearman") #geom_text(aes(label=PaperID))
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=Norm_Strength, y=Delta)) + geom_point() + geom_smooth(method = "lm")+ facet_wrap(~Game_type, ncol=3) + stat_cor(method = "spearman")# + geom_text(aes(label=PaperID))
cor.test(master$specificity_min, master$Delta, method= "spearman", exact = F)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=specificity_min, y=Delta)) + geom_point() + geom_smooth(method = "lm") + stat_cor(method = "spearman") #geom_text(aes(label=PaperID))
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=specificity_min, y=Delta)) + geom_point() + geom_smooth(method = "lm")+ facet_wrap(~Game_type, ncol=3) + stat_cor(method = "spearman")# + geom_text(aes(label=PaperID))
summary(master$specificity_plus)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=specificity_plus)) +
geom_histogram(bins = 7, col=I("black")) + ggtitle("Histogram of Specificity (positive values)") + xlab("Specificity") + facet_wrap(~Game_type)
cor.test(master$specificity_plus, master$Delta, method= "spearman", exact = F)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=specificity_plus, y=Delta)) + geom_point() + geom_smooth(method = "lm") + stat_cor(method = "spearman") #geom_text(aes(label=PaperID))
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=specificity_plus, y=Delta)) + geom_point() + geom_smooth(method = "lm")+ facet_wrap(~Game_type, ncol=3) + stat_cor(method = "spearman")# + geom_text(aes(label=PaperID))
summary(master$specificity_min)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=specificity_min)) +
geom_histogram(bins = 7, col=I("black")) + ggtitle("Histogram of Specificity (negative values)") + xlab("Specificity") + facet_wrap(~Game_type)
summary(master$consistency)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=consistency)) +
geom_histogram(bins = 7, col=I("black")) + ggtitle("Histogram of Consistency") + xlab("Consistency") + facet_wrap(~Game_type)
cor.test(master$consistency, master$Delta, method= "spearman", exact = F)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=consistency, y=Delta)) + geom_point() + geom_smooth(method = "lm") + stat_cor(method = "spearman") #geom_text(aes(label=PaperID))
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=consistency, y=Delta)) + geom_point() + geom_smooth(method = "lm")+ facet_wrap(~Game_type, ncol=3) + stat_cor(method = "spearman")# + geom_text(aes(label=PaperID))
master$consistency
library(readxl)
setwd("C:/Users/stefa/OneDrive/Documenti/Lavoro/Logispin/")
# Load data
df <- read_excel("Logispin Assessment2.xlsx")
df <- df %>% arrange(User)
library(readxl)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(cluster)
library(factoextra)
loadfonts(device = "win")
setwd("C:/Users/stefa/OneDrive/Documenti/Lavoro/Logispin/")
# Load data
df <- read_excel("Logispin Assessment2.xlsx")
df <- df %>% arrange(User)
summary(df$Bonus_Amount)
summary(df %>% filter(Depositor_Y_N=="YES"))
summary(df %>% filter(Depositor_Y_N=="YES") %>% select(Amount_Deposited))
summary(df %>% filter(Bonus_Withdrawn_Y_N=="YES") %>% select(Amount_Bonus_Withdrawn))
summary(df %>% filter(Real_Money_Y_N=="YES") %>% select(Total_Real_Stake))
summary(df$Bonus_Amount)
# Graphics
ggplot(data = df, aes(x=Amount_Bonus_Withdrawn)) + geom_freqpoly()
Bonus_group <- df %>% group_by(Bonus_Amount) %>% summarise(N=n(), Total = sum(Bonus_Amount), percent_of_total = round(Total/Total_Bonus*100, 2), .groups = 'drop') %>% arrange(-N) %>% head(10)
Total_Bonus <- sum(df$Bonus_Amount)
Bonus_group <- df %>% group_by(Bonus_Amount) %>% summarise(N=n(), Total = sum(Bonus_Amount), percent_of_total = round(Total/Total_Bonus*100, 2), .groups = 'drop') %>% arrange(-N) %>% head(10)
View(Bonus_group)
Bonus_group <- rbind(Bonus_group, c("Total", colSums(Bonus_group[,2:4])))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram()
ggplot(data = df %>% filter(Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram()
ggplot(data = df, aes(x=Bonus_Amount)) + geom_histogram()
ggplot(data = df, aes(x=Bonus_Amount)) + geom_histogram(bins = 3)
ggplot(data = df, aes(x=Bonus_Amount)) + geom_histogram(bins = 4)
Bonus_group <- df %>% group_by(Bonus_Amount) %>% summarise(N=n(), Total = sum(Bonus_Amount), percent_of_total = round(Total/Total_Bonus*100, 2), .groups = 'drop') %>% arrange(-N) %>% head(20)
Bonus_group <- rbind(Bonus_group, c("Total", colSums(Bonus_group[,2:4])))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram()
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram(bins = 40)
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram(bins = 100)
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram(bins = 70)
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) + geom_histogram(bins = 50)
# Graphics
ggplot(data = df, aes(x=Amount_Bonus_Withdrawn)) + geom_freqpoly()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn > -50000), aes(x=-Amount_Bonus_Withdrawn)) + geom_freqpoly()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn > -10000), aes(x=-Amount_Bonus_Withdrawn)) + geom_freqpoly()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn > -2500), aes(x=-Amount_Bonus_Withdrawn)) + geom_freqpoly()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn > -1000), aes(x=-Amount_Bonus_Withdrawn)) + geom_freqpoly()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn < 0), aes(x=-Amount_Bonus_Withdrawn)) + geom_freqpoly()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn < 0 & Amount), aes(x=-Amount_Bonus_Withdrawn)) + geom_histogram()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn < 0), aes(x=-Amount_Bonus_Withdrawn)) + geom_histogram()
# Graphics
ggplot(data = df %>% filter(Amount_Bonus_Withdrawn < 0), aes(x=-Amount_Bonus_Withdrawn)) + geom_histogram(color_palette("#203753"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50)
reg5 <- lm(Bonus_Amount ~ Real_Money_Y_N, data = df)
summary(reg5)
wilcox.test(Bonus_Amount ~ Real_Money_Y_N, data = df,
alternative = "two.sided",
exact = FALSE)
ggboxplot(df, x = "Real_Money_Y_N", y = "Bonus_Amount",
color = "group_days", palette = c("#203753", "#00C0F3"),
ylab = "Bonus_Amount", xlab = "Real_Money_Y_N")
ggboxplot(df, x = "Real_Money_Y_N", y = "Bonus_Amount",
color = "Real_Money_Y_N", palette = c("#203753", "#00C0F3"),
ylab = "Bonus_Amount", xlab = "Real_Money_Y_N")
df_no_outlier <- df %>% filter(Bonus_Amount < 10000)
ggboxplot(df, x = "Real_Money_Y_N", y = "Bonus_Amount",
color = "Real_Money_Y_N", palette = c("#203753", "#00C0F3"),
ylab = "Bonus_Amount", xlab = "Real_Money_Y_N")
ggboxplot(df_no_outlier, x = "Real_Money_Y_N", y = "Bonus_Amount",
color = "Real_Money_Y_N", palette = c("#203753", "#00C0F3"),
ylab = "Bonus_Amount", xlab = "Real_Money_Y_N")
with(df, shapiro.test(Bonus_Amount[Real_Money_Y_N == "YES"]))
with(df, shapiro.test(Bonus_Amount[Real_Money_Y_N == "NO"]))
Bonus_Amount[Real_Money_Y_N == "NO"]
# Grouping by Bonus Amount
Total_Bonus <- sum(df$Bonus_Amount)
Bonus_group <- df %>% group_by(Bonus_Amount) %>% summarise(N=n(), Total = sum(Bonus_Amount), percent_of_total = round(Total/Total_Bonus*100, 2), .groups = 'drop') %>% arrange(-N) %>% head(20)
Bonus_group <- rbind(Bonus_group, c("Total", colSums(Bonus_group[,2:4])))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50)
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50, fill="#203753")
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50, fill="#203753")
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50)
# Grouping by Bonus Amount
Total_Bonus <- sum(df$Bonus_Amount)
Bonus_group <- df %>% group_by(Bonus_Amount) %>% summarise(N=n(), Total = sum(Bonus_Amount), percent_of_total = round(Total/Total_Bonus*100, 2), .groups = 'drop') %>% arrange(-N) %>% head(20)
Bonus_group <- rbind(Bonus_group, c("Total", colSums(Bonus_group[,2:4])))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50, palette = c("#203753", "#00C0F3"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50, fill = c("#203753", "#00C0F3"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) + theme_classic()
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) + theme_classic(palette(value = c("#203753", "#00C0F3")))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N, palette(c("#203753", "#00C0F3")))) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) + theme_classic()
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) + theme_classic()
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme_classic(strip.background = element_rect(fill = "grey20", color = "grey80", size = 1),
strip.text = element_text(colour = "white"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "grey20", color = "grey80", size = 1),
strip.text = element_text(colour = "white"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount, color = Real_Money_Y_N)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "grey20", color = "grey80", size = 1),
strip.text = element_text(colour = "white"),
colors("red"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "grey20", color = "grey80", size = 1),
strip.text = element_text(colour = "white"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line = element_line(colour = "black"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
panel.border = element_line(colour = "black"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(colour = "black"))
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line.x = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line.x = element_line(colour = "black"),
axis.line.x = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount)) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount), title("Real_Money_Y_N")) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount), title("Real_Money_Y_N")) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank()) +
labs(title = "Real_Money_Y_N")
ggplot(data = df %>% filter(Bonus_Amount %in% Bonus_group$Bonus_Amount), aes(x=Bonus_Amount), title("Real_Money_Y_N")) +
facet_wrap(~Real_Money_Y_N, scales = 'free_x') + geom_histogram(bins = 50) +
labs(title = "Real_Money_Y_N") +
theme(strip.background = element_rect(fill = "#203753", color = "#00C0F3", size = 2),
strip.text = element_text(colour = "white"),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
library(readxl)
library(tidyverse)
library(ggplot2)
library(ggpubr)
loadfonts(device = "win")
# Load data
df <- read_excel("Logispin Assessment2.xlsx")
df <- df %>% arrange(User)
# Descriptive Statistics
summary(df$Bonus_Amount)
summary(df %>% filter(Real_Money_Y_N=="YES") %>% select(Total_Real_Stake))
summary(df %>% filter(Bonus_Withdrawn_Y_N=="YES") %>% select(Amount_Bonus_Withdrawn))
summary(df %>% filter(Depositor_Y_N=="YES") %>% select(Amount_Deposited))
# Bonus Campaign
Total_Bonus <- sum(df$Bonus_Amount)
Bonus_group <- df %>% group_by(Bonus_Amount) %>% summarise(N=n(), Total = sum(Bonus_Amount), percent_of_total = round(Total/Total_Bonus*100, 2), .groups = 'drop') %>% arrange(-N) %>% head(20)
Bonus_group <- rbind(Bonus_group, c("Total", colSums(Bonus_group[,2:4])))
View(Bonus_group)
library(zoo)
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(ggpubr)
library(survival)
library(sjPlot)
library(kableExtra)
library(car)
library(DT)
library(zoo)
setwd("../")
# read data
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(Macro_game_type = ifelse(Game_type %in% c("DG","Donation Game"), "DG and Donation Game", Game_type), SD_NE=sqrt(Var_NE)) %>%
subset.data.frame(subset = !(Standard_game %in% c("N")))
cor.test(master$Avg_NE, master$Avg_coop, method= "spearman", exact = F)
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) + geom_point() + geom_smooth(method = "lm") + ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") + stat_cor(method = "spearman") + xlab("Cooperation Norm (as % of endowment)") + ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) + geom_point() + geom_smooth(method = "lm") + ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") + facet_wrap(~Macro_game_type, ncol=3) + stat_cor(method = "spearman")
# specificity = Sd_Avg_NE
# consistency = sqrt(Var_NE)
master = master %>% mutate(Norm_Strength = 1/sqrt(Var_NE) + 1/Sd_Avg_NE,
Delta = (Avg_NE-Avg_coop))
summary(master$Norm_Strength)
ggplot(data=master, aes(x=Norm_Strength)) +
geom_histogram() + ggtitle("Histogram of Norm Strength") + xlab("Strength Norm") + facet_wrap(~Macro_game_type)
cor.test(master$Norm_Strength, master$Delta, method= "spearman", exact = F)
ggplot(data=master, aes(x=Norm_Strength, y=Delta)) + geom_point() + geom_smooth(method = "lm") + stat_cor(method = "spearman")
ggplot(data=master, aes(x=Norm_Strength, y=Delta)) + geom_point() + geom_smooth(method = "lm")+ facet_wrap(~Macro_game_type, ncol=3) + stat_cor(method = "spearman")# + geom_text(aes(label=PaperID))
DG <- master %>% subset.data.frame(Game_type=="DG" & Choice_Method== "Direct")
DG_UG <- master %>% subset.data.frame(Game_type=="DG"|Game_type=="UG")
UG <- master %>% subset.data.frame(Game_type=="UG")
hp4_mean <- master %>%
subset.data.frame(subset = Macro_game_type %in% c("DG and Donation Game", "UG")&Choice_Method != "OnlyNorms") %>%
group_by(Macro_game_type) %>%
summarise(Coop = mean(Avg_coop, na.rm = T),
Avg_Norm = mean(Avg_NE, na.rm = T),
Delta = mean(Delta, na.rm = T),
Strength = mean(Norm_Strength, na.rm = T),
n = n()) %>%
arrange(Macro_game_type)
master_test <- master %>% subset.data.frame(select = c(Game_type, Avg_coop, Avg_NE, Delta, Norm_Strength, Macro_game_type, Sd_Avg_NE, Var_NE), subset = Game_type %in% c("DG", "UG"))
wilc_delta = wilcox.test(Delta ~ Macro_game_type, data=master_test)
wilc_strength = wilcox.test(Norm_Strength ~ Macro_game_type, data = master_test)
wilc_coop = wilcox.test(Avg_coop ~ Macro_game_type, data = master_test)
wilc_norm = wilcox.test(Avg_NE ~ Macro_game_type, data = master_test)
hp4plus_mean <- hp4_mean %>% add_row(Macro_game_type = "Difference (Wilcoxon p-value)", Coop = wilc_coop$p.value, Avg_Norm = wilc_norm$p.value, Delta = wilc_delta$p.value, Strength = wilc_strength$p.value)
opts <- options(knitr.kable.NA = "")
kbl(hp4plus_mean, digits = 4, booktabs = T, align = "lccccc", centering = F, caption = "Average and Mann-Whitney-Wilcoxon Test") %>%
kable_styling(position = "left", full_width = F) %>%
column_spec(1, bold = T) %>%
row_spec(3, bold = T, color = "white", background = "#6c757d")
# hp4_sd <- master %>%
#   subset.data.frame(subset = Macro_game_type %in% c("DG and Donation Game", "UG")) %>%
#   group_by(Macro_game_type) %>%
#   summarise(Coop = sd(Avg_coop, na.rm = T),
#             Avg_Norm = sd(Avg_NE, na.rm = T),
#             Delta = sd(Delta, na.rm = T),
#             Strength = sd(Norm_Strength, na.rm = T),
#             n = n()) %>%
#   arrange(Macro_game_type)
#
# opts <- options(knitr.kable.NA = "")
# kbl(hp4_sd, digits = 4, booktabs = T, align = "lccccc", centering = F, caption = "Standard Deviation") %>%
#   kable_styling(position = "left", full_width = F) %>%
#   column_spec(1, bold = T)
hp4_SP_CS <- master %>%
subset.data.frame(subset = Macro_game_type %in% c("DG and Donation Game", "UG")) %>%
group_by(Macro_game_type) %>%
summarise(Specificity = mean(1/(Sd_Avg_NE), na.rm = T),
Consistency = mean(1/(sqrt(Var_NE)), na.rm = T)) %>%
arrange(Macro_game_type)
F_test_spec <- wilcox.test(1/(master_test$Sd_Avg_NE) ~ master_test$Macro_game_type)
F_test_cons <- wilcox.test(1/(sqrt(master_test$Var_NE)) ~ master_test$Macro_game_type)
hp4plus_SP_CS <- hp4_SP_CS %>%
add_row(Macro_game_type = "Difference (Wilcoxon p-value)", Specificity = F_test_spec$p.value, Consistency = F_test_cons$p.value)
opts <- options(knitr.kable.NA = "")
kbl(hp4plus_SP_CS, digits = 4, booktabs = T, align = "lcc", centering = F, caption = "Consistency e Specificity") %>%
kable_styling(position = "left", full_width = F) %>%
column_spec(1, bold = T) %>%
row_spec(3, bold = T, color = "white", background = "#6c757d")
ggarrange(ggplot(master_test) + geom_density(aes(color = Macro_game_type, x=log(1/Sd_Avg_NE))) + xlab("Specificity"),
ggplot(master_test) + geom_density(aes(color = Macro_game_type, x=log(1/sqrt(Var_NE)))) + xlab("Consistency"), common.legend = T)
library(tidyverse)
library(readxl)
rm(list = ls())
# Run paper script
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2016Kim003.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2019Cha026.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Tho028.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2015Ves034.R")
#problema paper... forse la task iniziale influenza molto la norma... non è 50% ma 83%
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Del037.R")
# i trattamenti sono diversi in base alla nazione... mancano i dati sulle norme
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2018Kim038.R")
# media norma 100%
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Ves049.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2019Tjo060.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2018Her061.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2019Dro082.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2020And089.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2020Bas115.R")
# mancano i dati di kw, da richiedere
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Sen116.R")
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2021Kon127.R")
rm(list = ls())
# Create the master file -> merge all csv file
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/Paper_csv/")
Paper_003=read.csv("2016Kim003_finaldf.csv", sep=",")
master <- Paper_003
Paper_026=read.csv("2019Cha026_finaldf.csv", sep=",")
master <- Paper_026 %>%
rbind.data.frame(master)
Paper_028=read.csv("2017Tho028_finaldf.csv", sep=",")
master <- Paper_028 %>%
rbind.data.frame(master)
Paper_034=read.csv("2015Ves034_finaldf.csv", sep=",")
master <- Paper_034 %>%
rbind.data.frame(master)
Paper_037=read.csv("2017Del037_finaldf.csv", sep=",")
master <- Paper_037 %>%
rbind.data.frame(master)
Paper_038=read.csv("2018Kim038_finaldf.csv", sep=",")
master <- Paper_038 %>%
rbind.data.frame(master)
Paper_049=read.csv("2017Ves049_finaldf.csv", sep=",")
master <- Paper_049 %>%
rbind.data.frame(master)
Paper_060=read.csv("2019Tjo060_finaldf.csv", sep=",")
master <- Paper_060 %>%
rbind.data.frame(master)
Paper_061=read.csv("2018Her061_finaldf.csv", sep=",")
master <- Paper_061 %>%
rbind.data.frame(master)
Paper_082=read.csv("2019Dro082_finaldf.csv", sep=",")
master <- Paper_082 %>%
rbind.data.frame(master)
Paper_089=read.csv("2020And089_finaldf.csv", sep=",")
master <- Paper_089 %>%
rbind.data.frame(master)
Paper_115=read.csv("2020Bas115_finaldf.csv", sep=",")
master <- Paper_115 %>%
rbind.data.frame(master)
Paper_116=read.csv("2017Sen116_finaldf.csv", sep=",")
master <- Paper_116 %>%
rbind.data.frame(master)
Paper_127=read.csv("2021Kon127_finaldf.csv", sep=",")
master <- Paper_127 %>%
rbind.data.frame(master)
# save master file as csv
setwd("C:/Users/stefa/Documents/CNR/GitHub/Social_norm_meta_analysis/File_DB/Output/")
write.csv(master, file = "Treatment.csv", row.names = F)
