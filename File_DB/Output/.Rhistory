library(car)
library(DT)
library(zoo)
library(AICcmodavg)
library(boot)
library(arm)
setwd("../")
# read data beliefs and choices with ALL DATA
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(treatment_id=paste(PaperID,TreatmentCode,sep="_"))
beliefs <- read.csv("File_DB/Output/Subjects_beliefs.csv", sep = ",")
choices <- read.csv("File_DB/Output/Subjects_choices.csv", sep = ",")
setwd("Paper_csv/")
df_avg_kw <- read.csv("2016Kim003_avg_kw.csv", sep = ",")
df_avg_kw <- read.csv("2018Her061_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2013Kru001_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2019Cha026_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2012Laz164_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2007Lis165_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2020Bas115_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2020And089_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw) %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
getwd()
stata_output_model_DG <- read_excel("stata output model DG.xlsx")
stata_output_model_DG <- stata_output_model_DG %>%
mutate(weight_SE=(n_obs)^2)
average_coeff_stata <- stata_output_model_DG %>% summarise(across(s_delta:cr_sigma, ~weighted.mean(., w = n_obs, na.rm=T)))
average_SE_stata <- stata_output_model_DG %>% summarise(across(s_delta_SE:cr_sigma_SE, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
stata_output_model_DG <- stata_output_model_DG %>%
add_row(treatment_id="Average", average_coeff_stata , sqrt(average_SE_stata), n_obs=sum(stata_output_model_DG$n_obs), weight_SE=sum(stata_output_model_DG$weight_SE))
# graphic
## social expectation model
plot_s_delta <- ggplot(stata_output_model_DG, aes(x=s_delta,y=treatment_id)) +
geom_pointrange(aes(xmin=s_delta-2*s_delta_SE,xmax=s_delta+2*s_delta_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of payoff (delta)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_s_gamma <- ggplot(stata_output_model_DG, aes(x=s_gamma,y=treatment_id)) +
geom_pointrange(aes(xmin=s_gamma-2*s_gamma_SE,xmax=s_gamma+2*s_gamma_SE), shape=20) +
xlab("Coefficient of norm expectation (gamma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_s_delta, plot_s_gamma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
# inequality aversion model
plot_cr_rho <- ggplot(stata_output_model_DG, aes(x=cr_rho,y=treatment_id)) +
geom_pointrange(aes(xmin=cr_rho-2*cr_rho_SE,xmax=cr_rho+2*cr_rho_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff ahead (rho)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_cr_sigma <- ggplot(stata_output_model_DG, aes(x=cr_sigma,y=treatment_id)) +
geom_pointrange(aes(xmin=cr_sigma-2*cr_sigma_SE,xmax=cr_sigma+2*cr_sigma_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff behind (sigma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_cr_rho, plot_cr_sigma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
stata_aic <- read_excel("stata aic DG.xlsx") %>%
mutate(Best_model_se_cr=ifelse(Delta_se_cr<0,"Social Expectation", "Charness & Rubin"))
ggplot(data = stata_aic, aes(Delta_se_cr, treatment_id)) +
geom_col(aes(fill=Best_model_se_cr)) +
xlim(-max(abs(stata_aic$Delta_se_cr))*1.2,max(abs(stata_aic$Delta_se_cr))*1.2) +
xlab("AIC Delta") +
ylab("Treatment") +
labs(title = "Social expectation vs Charness & Rubin")+
theme_light() +
theme(legend.position="bottom",
strip.text.x = element_text(size = 12, color = "black", face = "bold.italic"),
strip.background = element_blank()) +
scale_fill_brewer(palette="Set1") +
facet_wrap(~Game_type) +
geom_point(shape=1) +
geom_vline(xintercept = 0)
stata_aic <- read_excel("stata aic DG.xlsx") %>%
mutate(Best_model_se_cr=ifelse(Delta_se_cr<0,"Social Expectation", "Charness & Rubin"))
ggplot(data = stata_aic, aes(Delta_se_cr, treatment_id)) +
geom_col(aes(fill=Best_model_se_cr)) +
xlim(-max(abs(stata_aic$Delta_se_cr))*1.2,max(abs(stata_aic$Delta_se_cr))*1.2) +
xlab("AIC Delta") +
ylab("Treatment") +
labs(title = "Social expectation vs Charness & Rubin")+
theme_light() +
theme(legend.position="bottom",
strip.text.x = element_text(size = 12, color = "black", face = "bold.italic"),
strip.background = element_blank()) +
scale_fill_brewer(palette="Set1") +
geom_point(shape=1) +
geom_vline(xintercept = 0)
# graphic
## social expectation model
plot_s_delta <- ggplot(stata_output_model_DG, aes(x=s_delta,y=treatment_id)) +
geom_pointrange(aes(xmin=s_delta-1.96*s_delta_SE,xmax=s_delta+1.96*s_delta_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of payoff (delta)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_s_gamma <- ggplot(stata_output_model_DG, aes(x=s_gamma,y=treatment_id)) +
geom_pointrange(aes(xmin=s_gamma-1.96*s_gamma_SE,xmax=s_gamma+1.96*s_gamma_SE), shape=20) +
xlab("Coefficient of norm expectation (gamma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_s_delta, plot_s_gamma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
# inequality aversion model
plot_cr_rho <- ggplot(stata_output_model_DG, aes(x=cr_rho,y=treatment_id)) +
geom_pointrange(aes(xmin=cr_rho-2*cr_rho_SE,xmax=cr_rho+2*cr_rho_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff ahead (rho)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_cr_sigma <- ggplot(stata_output_model_DG, aes(x=cr_sigma,y=treatment_id)) +
geom_pointrange(aes(xmin=cr_sigma-2*cr_sigma_SE,xmax=cr_sigma+2*cr_sigma_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff behind (sigma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_cr_rho, plot_cr_sigma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
# graphic
## social expectation model
plot_s_delta <- ggplot(stata_output_model_DG, aes(x=s_delta,y=treatment_id)) +
geom_pointrange(aes(xmin=s_delta-1.96*s_delta_SE,xmax=s_delta+1.96*s_delta_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of payoff (delta)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_s_gamma <- ggplot(stata_output_model_DG, aes(x=s_gamma,y=treatment_id)) +
geom_pointrange(aes(xmin=s_gamma-1.96*s_gamma_SE,xmax=s_gamma+1.96*s_gamma_SE), shape=20) +
xlab("Coefficient of norm expectation (gamma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_s_delta, plot_s_gamma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
# inequality aversion model
plot_cr_rho <- ggplot(stata_output_model_DG, aes(x=cr_rho,y=treatment_id)) +
geom_pointrange(aes(xmin=cr_rho-1.96*cr_rho_SE,xmax=cr_rho+1.96*cr_rho_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff ahead (rho)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_cr_sigma <- ggplot(stata_output_model_DG, aes(x=cr_sigma,y=treatment_id)) +
geom_pointrange(aes(xmin=cr_sigma-1.96*cr_sigma_SE,xmax=cr_sigma+1.96*cr_sigma_SE), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff behind (sigma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_cr_rho, plot_cr_sigma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
source("~/Documents/GitHub/Social_norm_meta_analysis/Analysis/Krupka Analysis.R")
getwd()
setwd(dir = "Documents/GitHub/Social_norm_meta_analysis/Analysis/")
source("~/Documents/GitHub/Social_norm_meta_analysis/Analysis/Krupka Analysis.R")
setwd(dir = "Documents/GitHub/Social_norm_meta_analysis")
setwd(dir = "Documents/GitHub/Social_norm_meta_analysis/")
setwd(dir = "/Documents/GitHub/Social_norm_meta_analysis/")
setwd(dir = "Users/Stefano/Documents/GitHub/Social_norm_meta_analysis/")
setwd(dir = "Users/Stefano/Documents/GitHub/Social_norm_meta_analysis")
setwd("../")
getwd()
source("~/Documents/GitHub/Social_norm_meta_analysis/Analysis/Krupka Analysis.R")
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(sjPlot)
library(ggpubr)
library(foreign)
library(survival)
library(gridExtra)
library(kableExtra)
library(car)
library(DT)
library(zoo)
# set directory
setwd("File_DB/Output/")
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
View(utility_df_treatment)
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=scenarios)
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=scenarios)
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=scenarios)
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_bully, df)
tab_model(ml.paper1, ml.paper2 , show.aic=T, show.loglik=T, show.se=T, show.ci=F , show.est=T)
tab_model(ml.paper1, ml.paper2 , show.aic=T, show.loglik=T, show.se=T, show.ci=F , show.est=T, transform = NULL)
df_standard <- mlogit.data(utility_df_treatment%>% filter(treatment_id=="2013Kru001_1a"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.standard <- mlogit(A ~ 0 + payoff + mean_app, df_standard)
df_standard
ml.standard
clogit(A ~ 0 + payoff + mean_app, df_standard)
clogit(A ~ 0 + payoff + mean_app, utility_df_treatment %>% filter(treatment_id=="2013Kru001_1a"))
clogit(A ~ 0 + payoff + mean_app + strata(subject_id), utility_df_treatment %>% filter(treatment_id=="2013Kru001_1a"))
clogit(A ~ payoff + mean_app + strata(subject_id), utility_df_treatment %>% filter(treatment_id=="2013Kru001_1a"))
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
ml.paper1
summary(ml.paper1)
clogit(A ~ payoff + mean_app + strata(scenarios), utility_df_treatment %>% filter(treatment_id=="2013Kru001_1a"))
clogit(A ~ payoff + mean_app + strata(subject_id), utility_df_treatment %>% filter(treatment_id=="2013Kru001_1a"))
View(utility_df_treatment)
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(sjPlot)
library(ggpubr)
library(foreign)
library(survival)
library(gridExtra)
library(kableExtra)
library(car)
library(DT)
library(zoo)
library(AICcmodavg)
library(boot)
library(arm)
setwd("../")
# read data beliefs and choices with ALL DATA
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(treatment_id=paste(PaperID,TreatmentCode,sep="_"))
beliefs <- read.csv("File_DB/Output/Subjects_beliefs.csv", sep = ",")
choices <- read.csv("File_DB/Output/Subjects_choices.csv", sep = ",")
setwd("Paper_csv/")
df_avg_kw <- read.csv("2016Kim003_avg_kw.csv", sep = ",")
df_avg_kw <- read.csv("2018Her061_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2013Kru001_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2019Cha026_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2012Laz164_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2007Lis165_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2020Bas115_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw)
df_avg_kw <- read.csv("2020And089_avg_kw.csv", sep = ",") %>% rbind.data.frame(df_avg_kw) %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
master_aic_analysis <- master %>%
filter(Game_type %in% c("DG")) %>%
subset.data.frame(subset = !(Standard_game %in% c("N")) &
Choice_Method != "OnlyNorms" &
StatusTreatment_Roma == "6-Complete" &
Baseline %in% c(NA, 1)) %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
# read file beliefs and choices
choices_aic_analysis <- choices  %>%
filter(treatment_id %in% levels(as.factor(paste(master_aic_analysis$PaperID,"_",master_aic_analysis$TreatmentCode, sep=""))))
choices_aic_analysis <- choices_aic_analysis %>% mutate(payoff=endowment-scenarios,
other_payoff_ahead=-ifelse(payoff-scenarios>0,payoff-scenarios,0),
other_payoff_behind=-ifelse(scenarios-payoff>0,scenarios-payoff,0),
sqr_other_payoff_ahead=-other_payoff_ahead^2,
sqr_other_payoff_behind=-other_payoff_behind^2)
beliefs_aic_analysis <- beliefs %>%
filter(treatment_id %in% levels(as.factor(paste(master_aic_analysis$PaperID,"_",master_aic_analysis$TreatmentCode, sep=""))))
beliefs_only_kim <- beliefs_aic_analysis %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
dplyr::select(paper_id, treatment_id, subject_id, scenarios, KW_Normative) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
}
beliefs_aic_analysis <- beliefs_aic_analysis %>%
dplyr::select(paper_id, treatment_id, subject_id, scenarios, KW_Normative) %>%
filter(paper_id != "2016Kim003") %>%
rbind.data.frame(kim003_interpolation %>% dplyr::select(-KW_Normative_temp))
mean_beliefs_aic_analysis <- beliefs_aic_analysis %>%
group_by(treatment_id, scenarios) %>%
summarise(mean_app = mean(KW_Normative),
sd_app = sd(KW_Normative),
log_sd_app = log(sd_app))
utility_df_treatment_aic_analysis <- choices_aic_analysis %>%
merge.data.frame(mean_beliefs_aic_analysis) %>%
arrange(paper_id,treatment_id,subject_id,scenarios) %>%
relocate(paper_id,treatment_id,subject_id,scenarios,choice,A,endowment,
payoff,mean_app,sd_app)
utility_df_treatment_aic_analysis$id = utility_df_treatment_aic_analysis %>% group_indices(subject_id)
# function
comparison_aic = function(treatment) {
df_master <- utility_df_treatment_aic_analysis %>%
filter(treatment_id==treatment)
social_expectation_model=clogit(A ~ payoff + mean_app + strata(subject_id),
data=df_master)
# boot.clogit <- function(data, indices){
# new_data <- data[indices,]
# mod <- clogit(A ~ payoff + mean_app + strata(subject_id), data = new_data, x=T, y=T)
# coefficients(mod)
# }
#
# boot_data <- boot(data=ciao, statistic=boot.clogit, R=1000)
social_delta = as.numeric(social_expectation_model$coefficients[1])
social_gamma = as.numeric(social_expectation_model$coefficients[2])
social_delta_se = coef(summary(social_expectation_model))[1, "se(coef)"]
social_gamma_se = coef(summary(social_expectation_model))[2, "se(coef)"]
inequality_aversion_model=clogit(A ~ other_payoff_ahead + other_payoff_behind + strata(subject_id),
data=df_master)
inequality_alpha = as.numeric(inequality_aversion_model$coefficients[1])
inequality_beta = as.numeric(inequality_aversion_model$coefficients[2])
inequality_alpha_se = coef(summary(inequality_aversion_model))[1, "se(coef)"]
inequality_beta_se = coef(summary(inequality_aversion_model))[2, "se(coef)"]
inequality_aversion_sqr_model=clogit(A ~ other_payoff_ahead + other_payoff_behind + sqr_other_payoff_ahead + strata(subject_id),
data=df_master)
inequality_sqr_alpha = as.numeric(inequality_aversion_sqr_model$coefficients[1])
inequality_sqr_beta = as.numeric(inequality_aversion_sqr_model$coefficients[2])
inequality_sqr_alpha2 = as.numeric(inequality_aversion_sqr_model$coefficients[3])
#inequality_sqr_beta2 = as.numeric(inequality_aversion_sqr_model$coefficients[4])
inequality_sqr_alpha_se = coef(summary(inequality_aversion_sqr_model))[1, "se(coef)"]
inequality_sqr_beta_se = coef(summary(inequality_aversion_sqr_model))[2, "se(coef)"]
inequality_sqr_alpha2_se = coef(summary(inequality_aversion_sqr_model))[3, "se(coef)"]
#inequality_sqr_beta2_se = coef(summary(inequality_aversion_sqr_model))[4, "se(coef)"]
mixed_model=clogit(A ~ other_payoff_ahead + other_payoff_behind + mean_app + strata(subject_id),
data=df_master)
mixed_alpha = as.numeric(mixed_model$coefficients[1])
mixed_beta = as.numeric(mixed_model$coefficients[2])
mixed_gamma = as.numeric(mixed_model$coefficients[3])
mixed_alpha_se = coef(summary(mixed_model))[1, "se(coef)"]
mixed_beta_se = coef(summary(mixed_model))[2, "se(coef)"]
mixed_gamma_se = coef(summary(mixed_model))[3, "se(coef)"]
models <- list(social_expectation_model,inequality_aversion_model, inequality_aversion_sqr_model, mixed_model)
model.names <- c('social expectation', 'inequality aversion', "inequality sqr", "mixed")
aic_comp_t <- aictab(cand.set = models, modnames = model.names)
row.names(aic_comp_t) <- aic_comp_t[,1]
paper_and_aic_coeff <- list(treatment,
aic_comp_t,
social_delta,
social_gamma,
social_delta_se,
social_gamma_se,
inequality_alpha,
inequality_beta,
inequality_alpha_se,
inequality_beta_se,
inequality_sqr_alpha,
inequality_sqr_beta,
inequality_sqr_alpha2,
#inequality_sqr_beta2,
inequality_sqr_alpha_se,
inequality_sqr_beta_se,
inequality_sqr_alpha2_se,
#inequality_sqr_beta2_se,
mixed_alpha,
mixed_beta,
mixed_gamma,
mixed_alpha_se,
mixed_beta_se,
mixed_gamma_se,
models)
names(paper_and_aic_coeff) <- c("treatment",
"aic_comp_t",
"social_delta",
"social_gamma",
"social_delta_se",
"social_gamma_se",
"inequality_alpha",
"inequality_beta",
"inequality_alpha_se",
"inequality_beta_se",
"inequality_sqr_alpha",
"inequality_sqr_beta",
"inequality_sqr_alpha2",
#"inequality_sqr_beta2",
"inequality_sqr_alpha_se",
"inequality_sqr_beta_se",
"inequality_sqr_alpha2_se",
#"inequality_sqr_beta2_se",
"mixed_alpha",
"mixed_beta",
"mixed_gamma",
"mixed_alpha_se",
"mixed_beta_se",
"mixed_gamma_se",
"models")
invisible(paper_and_aic_coeff)
}
View(utility_df_treatment_aic_analysis)
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(sjPlot)
library(ggpubr)
library(foreign)
library(survival)
library(gridExtra)
library(kableExtra)
library(car)
library(DT)
library(zoo)
# set directory
setwd("File_DB/Output/")
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=scenarios)
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=scenarios)
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
View(utility_df_treatment)
