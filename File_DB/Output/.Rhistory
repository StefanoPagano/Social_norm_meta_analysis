geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=22, fill=Game_type, size=Standard_game)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop, group=Game_type)) +
geom_point(aes(shape=23, fill=Game_type, size=Standard_game)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop, group=Game_type)) +
geom_point(aes(shape=1)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,1,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)") +
geom_jitter()
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman") +
theme(legend.position="none")
# specificity = mean of max deviation
# consistency = sqrt(Var_NE)
# master = master %>% mutate(consistency_old = 1/sqrt(Var_NE),
#                            Norm_Strength_old = consistency_old + Sd_Avg_NE,
#                            Delta = Avg_NE-Avg_coop)
master = master %>% mutate(consistency=1-sqrt(Var_NE)/max_sigma,
consistency_old = 1/sqrt(Var_NE),
specificity_old = 1/Sd_Avg_NE,
Norm_Strength = consistency + specificity_plus,
Norm_Strength_old = consistency_old + specificity_old,
Delta = (Avg_NE-Avg_coop)/Avg_NE)
summary(master$Delta)
ggplot(data=master%>% subset.data.frame(Choice_Method!="OnlyNorms"), aes(x=Delta)) +
geom_histogram(bins = 10, col=I("black")) + ggtitle("Histogram of Compliance") + xlab("Compliance (Delta)") + facet_wrap(~Game_type)
master %>% group_by(Game_type) %>% summarise(mean(Avg_coop))
master %>% group_by(Game_type) %>% summarise(mean(Avg_coop, na.rm=T))
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(ggpubr)
library(survival)
library(sjPlot)
library(kableExtra)
library(car)
library(DT)
library(zoo)
setwd("../")
# read data
getwd()
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(Macro_game_type = ifelse(Game_type %in% c("DG","Donation Game"), "DG and Donation Game", Game_type), SD_NE=sqrt(Var_NE)) %>%
subset.data.frame(subset = !(Standard_game %in% c("N")))
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 1: H1 : Correlation Between Average Cooperation and Norm (NE)") +
stat_cor(method = "spearman") +
xlab("Cooperation Norm (as % of endowment)") +
ylab("Cooperation (% of endowment)")
ggplot(data=master, aes(x=Avg_NE, y=Avg_coop)) +
geom_point(aes(shape=Game_type)) +
scale_shape_manual(values=c(0,3,2,5,7,15,16)) +
geom_smooth(method = "lm") +
ggtitle("Fig. 2: H1 : Correlation Between Average Cooperation and Norm (NE)") +
facet_wrap(~Game_type, ncol=3) +
stat_cor(method = "spearman") +
theme(legend.position="none")
master %>% group_by(Game_type) %>% summarise(Average_cooperation = mean(Avg_coop, na.rm=T))
knit_with_parameters("~/CNR/GitHub/Social_norm_meta_analysis/Analysis/Report.Rmd")
master %>% group_by(Game_type) %>% summarise(Average_cooperation = mean(Avg_coop, na.rm=T))
master %>% group_by(Game_type) %>% summarise(Average_cooperation = mean(Avg_coop, na.rm=T)) %>% arrange(Average_cooperation)
master %>% group_by(Game_type) %>%
summarise(Average_cooperation = mean(Avg_coop, na.rm=T),
Average_norm = mean(Avg_NE, na.rm=T)) %>%
arrange(Average_cooperation)
ciao <- master %>% group_by(Game_type) %>%
summarise(Average_cooperation = mean(Avg_coop, na.rm=T),
Average_norm = mean(Avg_NE, na.rm=T)) %>%
arrange(Average_cooperation)
ggplot(data = ciao, aes(x= Average_norm, y=Average_cooperation)) +
geom_point()
ciao <- master %>% group_by(Game_type) %>%
summarise(Average_cooperation = mean(Avg_coop, na.rm=T),
Average_norm = mean(Avg_NE, na.rm=T)) %>%
arrange(Average_cooperation)
ciao
ggplot(data = ciao, aes(x= Average_norm, y=Average_cooperation)) +
geom_point() +
stat_cor(method = "spearman")
ciao <- master %>% group_by(Game_type) %>%
summarise(Average_cooperation = mean(Avg_coop, na.rm=T),
Average_norm = mean(Avg_NE, na.rm=T)) %>%
arrange(Average_cooperation)
ciao
ggplot(data = ciao, aes(x= Average_norm, y=Average_cooperation)) +
geom_point() +
stat_cor(method = "spearman")
ciao <- master %>% group_by(Game_type) %>%
summarise(Average_cooperation = mean(Avg_coop, na.rm=T),
Average_norm = mean(Avg_NE, na.rm=T)) %>%
arrange(Average_cooperation)
ciao
ggplot(data = ciao, aes(x= Average_norm, y=Average_cooperation)) +
geom_point() +
stat_cor(method = "spearman")+
geom_smooth(method = "lm")
ciao <- master %>% group_by(Game_type) %>%
summarise(Average_cooperation = mean(Avg_coop, na.rm=T),
Average_norm = mean(Avg_NE, na.rm=T),
specificity_plus=mean(specificity_plus, na.rm=T)) %>%
arrange(Average_cooperation)
ciao
ggplot(data = ciao, aes(x= specificity_plus, y=Average_cooperation)) +
geom_point() +
stat_cor(method = "spearman")+
geom_smooth(method = "lm")
# set directory
setwd("../")
setwd("~/CNR/GitHub/Social_norm_meta_analysis")
# set directory
setwd("File_DB/Output/")
beliefs <- read.csv("Subjects_beliefs.csv", sep=",")
beliefs <- read.csv("Subjects_beliefs.csv", sep=",")
choices <- read.csv("Subjects_choices.csv", sep=",")
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001")
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001")
master <- read.csv("File_DB/Output/Treatment.csv", sep=",")
master <- read.csv("Treatment.csv", sep=",")
View(master)
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_standard=ifelse(treatment_id=="2013Kru001_1a",1,0))
View(choices)
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios) %>%
summarise(mean_app = mean(KW_Normative))
View(mean_beliefs)
View(choices)
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_standard=ifelse(treatment_id=="2013Kru001_1a",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_standard=ifelse(treatment_id=="2013Kru001_1a",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios) %>%
summarise(mean_app = mean(KW_Normative))
View(mean_beliefs)
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
View(utility_df_treatment)
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_standard=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios")
View(utility_df_treatment)
summary(utility_df_treatment)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
tab_model(ml.paper1)
source("~/CNR/GitHub/Social_norm_meta_analysis/Analysis/Krupka Analysis.R", echo=TRUE)
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
ml.paper1$model
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_standard, df)
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_standard, df)
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_bully, df)
tab_model(ml.paper1, ml.paper2)
tab_model(ml.paper1, ml.paper2 , show.aic = T, show.loglik = T, show.se = T, show.ci = F)
tab_model(ml.paper1, ml.paper2 , show.aic = T, show.loglik = T, show.se = T, show.ci = F, show.est = T)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_bully, df)
tab_model(ml.paper1, ml.paper2 , show.aic = T, show.loglik = T, show.se = T, show.ci = F, show.est = T)
tab_model(ml.paper1, ml.paper2 , show.aic = T, show.loglik = T, show.se = T, show.ci = 0.95, show.est = T)
tab_model(ml.paper1, ml.paper2 , show.aic = T, show.loglik = T, show.se = T, show.ci = 0.95, show.est = T, show.stat = T)
ml.paper1
ml.paper2
table(choices$treatment_id, choices$scenarios)
ml.paper1$est.stat
?simulate
predict(ml.paper1)
sum(predict(ml.paper1))
barplot(data=predict(ml.paper1))
ciao <- predict(ml.paper1)
typeof(ciao)
hist(ciao)
plot(ciao)
plot(ciao, type = bar)
plot(ciao, type = "bar")
plot(ciao, type = "l")
plot(ciao, type = "b")
plot(ciao, type = "g")
ciao <- as.data.frame(predict(ml.paper1))
typeof(ciao)
plot(ciao, type = "")
ciao
ciao <- predict(ml.paper1)
typeof(ciao)
plot(ciao, type="p")
library(mgcv)
predict_gam(ml.paper1)
install.packages("mgcv")
install.packages("mgcv")
library(mgcv)
predict_gam(ml.paper1)
summary(ml.paper1)
ciao[1,]
ciao <- predict(ml.paper1)
typeof(ciao)
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(mlogit)
library(sjmisc)
library(ggrepel)
library(readxl)
library(sjPlot)
library(ggpubr)
library(foreign)
library(survival)
library(gridExtra)
library(kableExtra)
library(car)
library(DT)
library(zoo)
# set directory
setwd("File_DB/Output/")
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_bully, df)
tab_model(ml.paper1, ml.paper2 , show.aic=T, show.loglik=T, show.se=T, show.ci=F , show.est=T)
ciao <- predict(ml.paper1)
typeof(ciao)
ciao[1,]
ciao
ciao[1]
ciao[1,[1]]
ciao[[2]]
ciao[[1]]
ciao[[]]
ciao[[:]]
ciao[[,:]]
ciao[[:,]]
ciao[1,]
ciao[1]
ciao[,1]
ciao$width
ciao[[c(0:10)]]
typeof(ciao)
as.numeric(ciao)
barplot(as.numeric(ciao))
barplot(as.numeric(ciao), names.arg = c(0:10))
df_standard <- mlogit.data(utility_df_treatment%>% filter(treatment_id=="2013Kru001_1a"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper3 <- mlogit(A ~ 0 + payoff + mean_app, df_standard)
ml.paper3
ml.paper3$est.stat
ml.paper3$coefficients
ml.paper3$model
ml.paper3$call
df_standard <- mlogit.data(utility_df_treatment%>% filter(treatment_id=="2013Kru001_1a"), choice = "A", shape = "long", alt.var = "scenarios_unique")
master <- read.csv("Treatment.csv", sep=",") %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
#scenarios in bully version between -5 and 5. Following I create a unique scenarios between 0 and 10.
beliefs <- read.csv("Subjects_beliefs.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
choices <- read.csv("Subjects_choices.csv", sep=",") %>%
filter(paper_id =="2013Kru001") %>%
mutate(dummy_bully=ifelse(treatment_id=="2013Kru001_1b",1,0)) %>%
mutate(scenarios_unique=ifelse(treatment_id=="2013Kru001_1b", scenarios+5, scenarios))
#compute avg norm
mean_beliefs <- beliefs %>%
group_by(treatment_id, scenarios_unique) %>%
summarise(mean_app = mean(KW_Normative))
utility_df_treatment <- choices %>%
merge.data.frame(mean_beliefs) %>%
arrange(paper_id,treatment_id,subject_id,scenarios_unique) %>%
mutate(payoff = endowment - scenarios)
df <- mlogit.data(utility_df_treatment, choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper1 <- mlogit(A ~ 0 + payoff + mean_app, df)
ml.paper2 <- mlogit(A ~ 0 + payoff + mean_app + mean_app:dummy_bully, df)
tab_model(ml.paper1, ml.paper2 , show.aic=T, show.loglik=T, show.se=T, show.ci=F , show.est=T)
all_model <- predict(ml.paper1)
barplot(as.numeric(all_model), names.arg = c(0:10))
df_standard <- mlogit.data(utility_df_treatment%>% filter(treatment_id=="2013Kru001_1a"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper3 <- mlogit(A ~ 0 + payoff + mean_app, df_standard)
pred_bully <- predict(ml.paper3)
pred_standard <- predict(ml.paper3)
barplot(as.numeric(pred_standard), names.arg = c(0:10))
df_bully <- mlogit.data(utility_df_treatment %>% filter(treatment_id=="2013Kru001_1b"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper4 <- mlogit(A ~ 0 + payoff + mean_app, df_bully)
pred_bully <- predict(ml.paper4)
barplot(as.numeric(pred_bully), names.arg = c(0:10))
c(1,3)+c(1,1)
plot_data <- as.data.frame(choice = rep(0:10, 2), prob = c(as.numeric(pred_standard),as.numeric(pred_bully)))
rep(0:10, 2)
c(as.numeric(pred_standard),as.numeric(pred_bully))
plot_data <- data.frame(choice = rep(0:10,2), prob = c(as.numeric(pred_standard),as.numeric(pred_bully)))
plot_data
plot_data <- data.frame(choice = rep(0:10,2), prob = c(as.numeric(pred_standard),as.numeric(pred_bully)), bully=c(rep(0,11),rep(1,11)))
plot_data
ggplot(data=plot_data, aes(y = prob, x = choice, group=bully)) + geom_bar()
ggplot(data=plot_data, aes(y = prob, x = choice, group=bully)) + geom_col()
ggplot(data=plot_data, aes(y = prob, x = choice, group=bully)) + geom_col(color=bully)
ggplot(data=plot_data, aes(y = prob, x = choice, group=bully)) + geom_col(position = "dodge")
ggplot(data=plot_data, aes(y = prob, x = choice, color=bully)) + geom_col(position = "dodge")
ggplot(data=plot_data, aes(y = prob, x = choice)) + geom_col(position = "dodge", fill=bully)
ggplot(data=plot_data, aes(y = prob, x = choice)) + geom_col(position = "dodge", fill=plot_data$bully)
ggplot(data=plot_data, aes(y = prob, x = choice)) + geom_col(position = "dodge", fill=as.factor(bully))
View(plot_data)
ggplot(data=plot_data, aes(y = prob, x = choice, fill=as.factor(bully))) + geom_col(position = "dodge")
df_standard <- mlogit.data(utility_df_treatment%>% filter(treatment_id=="2013Kru001_1a"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper3 <- mlogit(A ~ 0 + payoff + mean_app, df_standard)
pred_standard <- predict(ml.paper3)
barplot(as.numeric(pred_standard), names.arg = c(0:10))
df_bully <- mlogit.data(utility_df_treatment %>% filter(treatment_id=="2013Kru001_1b"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.paper4 <- mlogit(A ~ 0 + payoff + mean_app, df_bully)
pred_bully <- predict(ml.paper4)
plot_data <- data.frame(choice = rep(0:10,2), prob = c(as.numeric(pred_standard),as.numeric(pred_bully)), Type=c(rep("Standard",11),rep("Bully",11)))
ggplot(data=plot_data, aes(y = prob, x = choice, fill=as.factor(Type))) + geom_col(position = "dodge")
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge")
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge") + title("Predict")
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge") + title("Predict")
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge") + lab(title = "Predict")
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge") + text(title = "Predict")
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge") + labs(title = "Predict")
df_standard <- mlogit.data(utility_df_treatment%>% filter(treatment_id=="2013Kru001_1a"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.standard <- mlogit(A ~ 0 + payoff + mean_app, df_standard)
pred_standard <- predict(ml.standard)
barplot(as.numeric(pred_standard), names.arg = c(0:10))
df_bully <- mlogit.data(utility_df_treatment %>% filter(treatment_id=="2013Kru001_1b"), choice = "A", shape = "long", alt.var = "scenarios_unique")
ml.bully <- mlogit(A ~ 0 + payoff + mean_app, df_bully)
pred_bully <- predict(ml.bully)
barplot(as.numeric(pred_bully), names.arg = c(0:10))
plot_data <- data.frame(choice = rep(0:10,2), prob = c(as.numeric(pred_standard),as.numeric(pred_bully)), Type=c(rep("Standard",11),rep("Bully",11)))
ggplot(data=plot_data, aes(y = prob, x = choice, fill=Type)) + geom_col(position = "dodge") + labs(title = "Predict")
ml.bully
ml.standard
