csv_path_output <- "~/GitHub/Social_norm_meta_analysis/Paper_csv/"
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2016Kim003.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2016Kim003.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2019Cha026.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Tho028.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2015Ves034.R")
#problema paper... forse la task iniziale influenza molto la norma... non è 50% ma 83%
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
#problema paper... forse la task iniziale influenza molto la norma... non è 50% ma 83%
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Del037.R")
# i trattamenti sono diversi in base alla nazione... mancano i dati sulle norme
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
# i trattamenti sono diversi in base alla nazione... mancano i dati sulle norme
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2018Kim038.R")
# media norma 100%
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
# media norma 100%
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Ves049.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2019Tjo060.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2018Her061.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
# set wd
setwd("G:/Mon Drive/Meta-analysis beliefs/Dati paper/2019Tjo060")
csv_path_output <- "~/GitHub/Social_norm_meta_analysis/Paper_csv/"
# norm files - experiment 8 and 9
norms_8=read_excel("JBEE_Experiment_8_Norm.xlsx", sheet = "Sheet1")
norms_9=read_excel("JBEE_Experiment_9_Norm.xlsx", sheet = "Sheet1")
# meta-information dataset
meta_dataset <- read_xlsx(path = "G:/Mon Drive/Meta-analysis beliefs/Social Norms meta.xlsx", sheet = "ALL") %>% subset.data.frame(subset = PaperID == "2019Tjo060", select = c(n_Paper, PaperID, TreatmentCode, TreatmentName_paper, Year, Outlet, Published, FirstTask, between_vs_within, Game_type, Standard_game, Baseline, Group_size, One_Shot_Repeated, Choice_Method, Matching, Rounds, Punishment, Rewards, Monetary_Incentivized_experiment, Environment, Method_elicitation, Separate_sample_beliefs, Belief_repeated, Before_after_main_decisions, KW_Normative, KW_Personal, Bicchieri_Empirical, Bicchieri_Normative, Bicchieri_Personal_Beliefs, Bicchieri_between, Incentives_beliefs, StatusTreatment_Roma)) #%>% mutate(TreatmentCode = as.numeric(TreatmentCode))
# Experiment 8 - DG Norm-----------------
# get information on treatment
# cleaning DG
## ID
## Sesjion: session
## Mann: gender
## Erfaring: experience, Number of particapting in experimeriments? 0 = none, 1 = once, 2 = twice, and 3 = 3 or more.
## player.decision10_0
ex8_dg_dta_coop <- data.frame(Avg_coop = NA, Var_coop = NA) %>%
mutate(PaperID = "2019Tjo060", TreatmentCode = 8)
# 2. Beliefs dataframe ----
## KW: send from 0 to 800, step 200
## KW scale: -1: VI; -1/3: I; 1/3: A; 1: VA
label_col = as.character(seq(0,800,200))
norms_columns <- c(1:10)
n_sub_N = norms_8 %>% subset.data.frame(select = norms_columns) %>% summarise(n_sub_N = n())
## compute norm
ex8_dg_appropriateness_sum <- norms_8 %>% subset.data.frame(select = norms_columns) %>%
summarise_at(vars(S4H1:S4H5), sum, na.rm=T) %>%
t.data.frame() %>%
cbind.data.frame(donation=label_col) %>%
mutate(n_sub_N, Kw_m = ./n_sub_N)
db_appropriateness <- ex8_dg_appropriateness_sum %>% select(donation, Kw_m) %>% mutate(PaperID = "2019Tjo060", TreatmentCode = 8)
positive_appropriateness <- ex8_dg_appropriateness_sum %>% subset.data.frame(subset = Kw_m > 0) %>%
mutate(delta_max = max(Kw_m) - Kw_m)
if (min(ex8_dg_appropriateness_sum$Kw_m) < 0){
negative_appropriateness <- ex8_dg_appropriateness_sum %>% subset.data.frame(subset = Kw_m < 0) %>%
mutate(abs_Kw_m = abs(Kw_m), delta_max = max(Kw_m) - Kw_m)
} else {
negative_appropriateness <- ex8_dg_appropriateness_sum %>% mutate(delta_max = 0)
}
## compute variance norm
ex8_dg_norms_var <- norms_8[, norms_columns] %>%
summarise_at(vars(S4H1:S4H5), var, na.rm=T) %>%
t.data.frame() %>%
cbind.data.frame(donation=label_col)
ex8_dg_final_norms <- merge.data.frame(ex8_dg_appropriateness_sum, ex8_dg_norms_var, by = "donation") %>%
subset.data.frame(subset = ..x == max(..x)) %>%
mutate(PaperID = "2019Tjo060",
TreatmentCode = 8,
Avg_NE = as.integer(donation)/800,
Var_NE = ..y, Avg_KW_m = Kw_m,
Sd_Avg_NE = sd(ex8_dg_appropriateness_sum$Kw_m),
Sd_Avg_NE_min_max = max(positive_appropriateness$Kw_m) - min(positive_appropriateness$Kw_m),
specificity_plus = sum(positive_appropriateness$delta_max)/((length(positive_appropriateness$delta_max)-1)),
specificity_min = if (length(negative_appropriateness$delta_max)==1) {0} else {sum(negative_appropriateness$delta_max)/((length(negative_appropriateness$delta_max)-1))},
max_sigma = sd(c(rep(-1, ifelse(n_sub_N%%2==0, n_sub_N/2, (n_sub_N-1)/2)), rep(1, ifelse(n_sub_N%%2==0, n_sub_N/2, (n_sub_N+1)/2))))) %>%
subset.data.frame(select = -c(..x, ..y, donation))
# 3. combine dataset ----
finaldf <- meta_dataset %>% merge.data.frame(ex8_dg_dta_coop, by = c("PaperID","TreatmentCode")) %>%
merge.data.frame(ex8_dg_final_norms, all.x=T, by = c("PaperID","TreatmentCode")) %>%
subset.data.frame(select = -c(n_sub_N, Kw_m))
# Experiment 9 - DG Norm-----------------
# get information on treatment
# cleaning DG
## i: player code
## Semester = numbers of semester as student enrolled , 1= one semester, 2 = 2 semesters,.4= 3 and more semesters.
## Mann: gender
## Erfaring: experience, Number of particapting in experimeriments? 0 = none, 1 = once, 2 = twice, and 3 = 3 or more.
## player.decision10_0
ex9_dg_dta_coop <- data.frame(Avg_coop = NA, Var_coop = NA) %>%
mutate(PaperID = "2019Tjo060", TreatmentCode = 9)
# 2. Beliefs dataframe ----
## KW: send from 0 to 800, step 200
## KW scale: -1: VI; -1/3: I; 1/3: A; 1: VA
label_col = as.character(seq(0,800,200))
norms_columns <- c(1:9)
n_sub_N = norms_9 %>% subset.data.frame(select = norms_columns) %>% summarise(n_sub_N = n())
## compute norm
ex9_dg_appropriateness_sum <- norms_9 %>% subset.data.frame(select = norms_columns) %>%
summarise_at(vars(Handling1:Handling5), sum, na.rm=T) %>%
t.data.frame() %>%
cbind.data.frame(donation=label_col) %>%
mutate(n_sub_N, Kw_m = ./n_sub_N)
db_appropriateness <- ex9_dg_appropriateness_sum %>% select(donation, Kw_m) %>% mutate(PaperID = "2019Tjo060", TreatmentCode = 9) %>%
rbind.data.frame(db_appropriateness)
positive_appropriateness <- ex9_dg_appropriateness_sum %>% subset.data.frame(subset = Kw_m > 0) %>%
mutate(delta_max = max(Kw_m) - Kw_m)
if (min(ex9_dg_appropriateness_sum$Kw_m) < 0){
negative_appropriateness <- ex9_dg_appropriateness_sum %>% subset.data.frame(subset = Kw_m < 0) %>%
mutate(abs_Kw_m = abs(Kw_m), delta_max = max(Kw_m) - Kw_m)
} else {
negative_appropriateness <- ex9_dg_appropriateness_sum %>% mutate(delta_max = 0)
}
## compute variance norm
ex9_dg_norms_var <- norms_9[, norms_columns] %>%
summarise_at(vars(Handling1:Handling5), var, na.rm=T) %>%
t.data.frame() %>%
cbind.data.frame(donation=label_col)
ex9_dg_final_norms <- merge.data.frame(ex9_dg_appropriateness_sum, ex9_dg_norms_var, by = "donation") %>%
subset.data.frame(subset = ..x == max(..x)) %>%
mutate(PaperID = "2019Tjo060",
TreatmentCode = 9,
Avg_NE = as.integer(donation)/800,
Var_NE = ..y, Avg_KW_m = Kw_m,
Sd_Avg_NE = sd(ex9_dg_appropriateness_sum$Kw_m),
Sd_Avg_NE_min_max = max(positive_appropriateness$Kw_m) - min(positive_appropriateness$Kw_m),
specificity_plus = sum(positive_appropriateness$delta_max)/((length(positive_appropriateness$delta_max)-1)),
specificity_min = if (length(negative_appropriateness$delta_max)==1) {0} else {sum(negative_appropriateness$delta_max)/((length(negative_appropriateness$delta_max)-1))},
max_sigma = sd(c(rep(-1, ifelse(n_sub_N%%2==0, n_sub_N/2, (n_sub_N-1)/2)), rep(1, ifelse(n_sub_N%%2==0, n_sub_N/2, (n_sub_N+1)/2))))) %>%
subset.data.frame(select = -c(..x, ..y, donation))
# 3. combine dataset ----
finaldf <- meta_dataset %>% merge.data.frame(ex9_dg_dta_coop, by = c("PaperID","TreatmentCode")) %>%
merge.data.frame(ex9_dg_final_norms, all.x=T, by = c("PaperID","TreatmentCode")) %>%
subset.data.frame(select = -c(n_sub_N, Kw_m)) %>%
rbind.data.frame(finaldf) %>%
mutate(Avg_EE = NA, Avg_PNB = NA, Var_EE = NA, Var_PNB = NA)
write.csv(finaldf, file = paste(csv_path_output, paste(finaldf$PaperID[1], "_finaldf.csv", sep = ""), sep = ""), row.names = F)
write.csv(db_appropriateness, file = paste(csv_path_output, paste(db_appropriateness$PaperID[1], "_avg_kw.csv", sep = ""), sep = ""), row.names = F)
View(finaldf)
finaldf$PaperID[1]
# 3. combine dataset ----
finaldf <- meta_dataset %>% merge.data.frame(ex9_dg_dta_coop, by = c("PaperID","TreatmentCode")) %>%
merge.data.frame(ex9_dg_final_norms, all.x=T, by = c("PaperID","TreatmentCode")) %>%
subset.data.frame(select = -c(n_sub_N, Kw_m)) %>%
rbind.data.frame(finaldf) %>%
mutate(Avg_EE = NA, Avg_PNB = NA, Var_EE = NA, Var_PNB = NA)
finaldf
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2019Dro082.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2020And089.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2020Bas115.R")
# mancano i dati di kw, da richiedere
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2017Sen116.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2012Laz164.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2007Lis165.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2021Sze167.R")
setwd("~/GitHub/Social_norm_meta_analysis/Paper_script/")
source("2022Tve168.R")
rm(list = ls())
# Create the master file -> merge all csv file
setwd("~/GitHub/Social_norm_meta_analysis/Paper_csv/")
Paper_001=read.csv("2013Kru001_finaldf.csv", sep=",")
master <- Paper_001
Paper_003=read.csv("2016Kim003_finaldf.csv", sep=",")
master <- Paper_003 %>%
rbind.data.frame(master)
Paper_026=read.csv("2019Cha026_finaldf.csv", sep=",")
master <- Paper_026 %>%
rbind.data.frame(master)
Paper_028=read.csv("2017Tho028_finaldf.csv", sep=",")
master <- Paper_028 %>%
rbind.data.frame(master)
Paper_034=read.csv("2015Ves034_finaldf.csv", sep=",")
master <- Paper_034 %>%
rbind.data.frame(master)
Paper_037=read.csv("2017Del037_finaldf.csv", sep=",")
master <- Paper_037 %>%
rbind.data.frame(master)
Paper_038=read.csv("2018Kim038_finaldf.csv", sep=",")
master <- Paper_038 %>%
rbind.data.frame(master)
Paper_049=read.csv("2017Ves049_finaldf.csv", sep=",")
master <- Paper_049 %>%
rbind.data.frame(master)
Paper_060=read.csv("2019Tjo060_finaldf.csv", sep=",")
master <- Paper_060 %>%
rbind.data.frame(master)
Paper_061=read.csv("2018Her061_finaldf.csv", sep=",")
master <- Paper_061 %>%
rbind.data.frame(master)
Paper_082=read.csv("2019Dro082_finaldf.csv", sep=",")
master <- Paper_082 %>%
rbind.data.frame(master)
Paper_089=read.csv("2020And089_finaldf.csv", sep=",")
master <- Paper_089 %>%
rbind.data.frame(master)
Paper_115=read.csv("2020Bas115_finaldf.csv", sep=",")
master <- Paper_115 %>%
rbind.data.frame(master)
Paper_116=read.csv("2017Sen116_finaldf.csv", sep=",")
master <- Paper_116 %>%
rbind.data.frame(master)
#
# Paper_127=read.csv("2021Kon127_finaldf.csv", sep=",")
# master <- Paper_127 %>%
#   rbind.data.frame(master)
Paper_164=read.csv("2012Laz164_finaldf.csv", sep=",")
master <- Paper_164 %>%
rbind.data.frame(master)
Paper_165=read.csv("2007Lis165_finaldf.csv", sep=",")
master <- Paper_165 %>%
rbind.data.frame(master)
Paper_167=read.csv("2021Sze167_finaldf.csv", sep=",")
master <- Paper_167 %>%
rbind.data.frame(master)
Paper_168=read.csv("2022Tve168_finaldf.csv", sep=",")
master <- Paper_168 %>%
rbind.data.frame(master)
# save master file as csv
setwd("~/GitHub/Social_norm_meta_analysis/File_DB/Output/")
write.csv(master, file = "Treatment.csv", row.names = F)
setwd("~/GitHub/Social_norm_meta_analysis/File_DB")
setwd("~/GitHub/Social_norm_meta_analysis/File_DB")
source("Individual_within.R") # create subject-level database for within-subject design paper
setwd("~/GitHub/Social_norm_meta_analysis/File_DB")
setwd("~/GitHub/Social_norm_meta_analysis/File_DB")
source("Individual_between.R") # create subject-level database for between-subject design paper
csv_path_output <- "~/GitHub/Social_norm_meta_analysis/File_DB/Output/"
# Subjects choices file
Choice_DB <- rbind(Cha026_choice_1, Cha026_choice_2, Cha026_choice_3, Her061_choice, Kim003_choice_dg, Kim003_choice_ug, Bas115_choice, Laz164_choices, Lis165_base_choices, Lis165_take1_choices, Kru001_std_choices, Kru001_bully_choices, and089_pub_choices, and089_pvt_choices) %>%
subset.data.frame(select = -c(p))
write.csv(Choice_DB, file = paste(csv_path_output, "Subjects_choices.csv", sep = ""), row.names = F)
# Subjects beliefs file
Belief_DB <- rbind(Bas115_beliefs, Cha026_beliefs_1, Cha026_beliefs_2, Cha026_beliefs_3, Her061_beliefs, Kim003_beliefs_dg, Kim003_beliefs_ug, Laz164_beliefs, Lis165_base_beliefs, Lis165_take1_beliefs, Kru001_std_beliefs, Kru001_bully_beliefs, and089_pub_beliefs, and089_pvt_beliefs)
write.csv(Belief_DB, file = paste(csv_path_output, "Subjects_beliefs.csv", sep = ""), row.names = F)
rm(list=ls())
library(tidyverse)
setwd("~/GitHub/Social_norm_meta_analysis")
papers_included<-c("2007Lis165_1a","2007Lis165_1b","2012Laz164_3","2013Kru001_1a","2013Kru001_1b","2016Kim003_7","2018Her061_9","2019Cha026_1","2019Cha026_3","2020And089_1","2020And089_2","2020Bas115_2a")
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(treatment_id=paste(PaperID,TreatmentCode,sep="_"))
beliefs <- read.csv("File_DB/Output/Subjects_beliefs.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
choices <- read.csv("File_DB/Output/Subjects_choices.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
View(choices)
View(beliefs)
## interpolation of appropriateness with scenarios out of game
beliefs_only_kim <- beliefs %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
dplyr::select(paper_id, treatment_id, subject_id, scenarios, KW_Normative, Game_type, Design) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
Game_type="DG",
Design="Between",
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
Game_type="DG",
Design="Between",
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = zoo::na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
#print(kim003_interpolation)
}
beliefs_all <- beliefs %>% plyr::rbind.fill(kim003_interpolation %>% filter(scenarios %in% seq(1,15,2)) %>% subset.data.frame(select=-c(KW_Normative_temp)))
# create table of beliefs aggregated by paper for all papers (between-subjects and within-subjects)
beliefs_aggregated <- beliefs %>% group_by(treatment_id, scenarios) %>% summarise(mean_app = mean(KW_Normative, na.rm=T), sd_app = sd(KW_Normative, na.rm = T))
# create comprehensive table with choices and beliefs
temp <- choices %>% merge.data.frame(beliefs_aggregated, by = c("treatment_id", "scenarios"), all.x = T)
final_data <- temp %>% filter(treatment_id %in% papers_included)
View(final_data)
View(beliefs)
View(beliefs)
View(beliefs_aggregated)
View(final_data)
# create columns for models
final_data$payoff <- final_data$endowment - final_data$scenarios
final_data$other_payoff_ahead=ifelse(payoff-scenarios>0,payoff-scenarios,0)
final_data$other_payoff_behind=ifelse(scenarios-payoff>0,scenarios-payoff,0)
# create columns for models
final_data$payoff <- final_data$endowment - final_data$scenarios
final_data$other_payoff_ahead=ifelse(final_data$payoff-final_data$scenarios>0,final_data$payoff-final_data$scenarios,0)
final_data$other_payoff_behind=ifelse(final_data$scenarios-final_data$payoff>0,final_data$scenarios-final_data$payoff,0)
View(final_data)
## create stata readable files from raw dataset
##### ISSUE : 2016Kim003_7 has no beliefs data for odd numbered scenarios (interpolation). Find why in the originating codes. check lines 467 of individual_between.R
rm(list=ls())
library(tidyverse)
setwd("~/GitHub/Social_norm_meta_analysis")
papers_included<-c("2007Lis165_1a","2007Lis165_1b","2012Laz164_3","2013Kru001_1a","2013Kru001_1b","2016Kim003_7","2018Her061_9","2019Cha026_1","2019Cha026_3","2020And089_1","2020And089_2","2020Bas115_2a")
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(treatment_id=paste(PaperID,TreatmentCode,sep="_"))
beliefs <- read.csv("File_DB/Output/Subjects_beliefs.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
choices <- read.csv("File_DB/Output/Subjects_choices.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
# interpolating beliefs for kim
## interpolation of appropriateness with scenarios out of game
beliefs_only_kim <- beliefs %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
dplyr::select(paper_id, treatment_id, subject_id, scenarios, KW_Normative, Game_type, Design) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
Game_type="DG",
Design="Between",
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
Game_type="DG",
Design="Between",
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = zoo::na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
#print(kim003_interpolation)
}
beliefs_all <- beliefs %>% plyr::rbind.fill(kim003_interpolation %>% filter(scenarios %in% seq(1,15,2)) %>% subset.data.frame(select=-c(KW_Normative_temp)))
# create table of beliefs aggregated by paper for all papers (between-subjects and within-subjects)
beliefs_aggregated <- beliefs %>% group_by(treatment_id, scenarios) %>% summarise(mean_app = mean(KW_Normative, na.rm=T), sd_app = sd(KW_Normative, na.rm = T))
# create comprehensive table with choices and beliefs
temp <- choices %>% merge.data.frame(beliefs_aggregated, by = c("treatment_id", "scenarios"), all.x = T)
final_data <- temp %>% filter(treatment_id %in% papers_included) %>% relocate(paper_id,treatment_id,subject_id,scenarios,choice,A,endowment,
payoff,mean_app,sd_app)
# create columns for models
final_data$payoff <- final_data$endowment - final_data$scenarios
final_data$other_payoff_ahead=ifelse(final_data$payoff-final_data$scenarios>0,final_data$payoff-final_data$scenarios,0)
final_data$other_payoff_behind=ifelse(final_data$scenarios-final_data$payoff>0,final_data$scenarios-final_data$payoff,0)
## create stata readable files from raw dataset
##### ISSUE : 2016Kim003_7 has no beliefs data for odd numbered scenarios (interpolation). Find why in the originating codes. check lines 467 of individual_between.R
rm(list=ls())
library(tidyverse)
setwd("~/GitHub/Social_norm_meta_analysis")
papers_included<-c("2007Lis165_1a","2007Lis165_1b","2012Laz164_3","2013Kru001_1a","2013Kru001_1b","2016Kim003_7","2018Her061_9","2019Cha026_1","2019Cha026_3","2020And089_1","2020And089_2","2020Bas115_2a")
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(treatment_id=paste(PaperID,TreatmentCode,sep="_"))
beliefs <- read.csv("File_DB/Output/Subjects_beliefs.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
choices <- read.csv("File_DB/Output/Subjects_choices.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
# interpolating beliefs for kim
## interpolation of appropriateness with scenarios out of game
beliefs_only_kim <- beliefs %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
dplyr::select(paper_id, treatment_id, subject_id, scenarios, KW_Normative, Game_type, Design) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
Game_type="DG",
Design="Between",
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
Game_type="DG",
Design="Between",
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = zoo::na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
#print(kim003_interpolation)
}
beliefs_all <- beliefs %>% plyr::rbind.fill(kim003_interpolation %>% filter(scenarios %in% seq(1,15,2)) %>% subset.data.frame(select=-c(KW_Normative_temp)))
# create table of beliefs aggregated by paper for all papers (between-subjects and within-subjects)
beliefs_aggregated <- beliefs %>% group_by(treatment_id, scenarios) %>% summarise(mean_app = mean(KW_Normative, na.rm=T), sd_app = sd(KW_Normative, na.rm = T))
# create comprehensive table with choices and beliefs
temp <- choices %>% merge.data.frame(beliefs_aggregated, by = c("treatment_id", "scenarios"), all.x = T)
final_data <- temp %>% filter(treatment_id %in% papers_included) %>% relocate(paper_id,treatment_id,subject_id,scenarios,choice,A,endowment,
mean_app,sd_app)
# create columns for models
final_data$payoff <- final_data$endowment - final_data$scenarios
final_data$other_payoff_ahead=ifelse(final_data$payoff-final_data$scenarios>0,final_data$payoff-final_data$scenarios,0)
final_data$other_payoff_behind=ifelse(final_data$scenarios-final_data$payoff>0,final_data$scenarios-final_data$payoff,0)
final_data %>% group_by(paper_id, treatment_id, subject_id) %>% mutate(id=count())
final_data %>% group_by(paper_id, treatment_id, subject_id) %>% mutate(id=n())
final_data <- final_data %>% group_by(paper_id, treatment_id, subject_id) %>% mutate(id=n())
final_data <- final_data %>% group_by(paper_id, treatment_id, subject_id) %>% mutate(id=group_indices())
final_data <- final_data %>% group_by(paper_id, treatment_id, subject_id) %>% mutate(id=group_indices())
max(final_data$id)
mean(final_data$sd_app)
mean(final_data$sd_app, na.rm = T)
sd(final_data$sd_app, na.rm = T)
mean(final_data$choice, na.rm = T)
write.csv(file = "Analysis/new_data_utility.csv", x=final_data, row.names = F)
## create stata readable files from raw dataset
##### ISSUE : 2016Kim003_7 has no beliefs data for odd numbered scenarios (interpolation). Find why in the originating codes. check lines 467 of individual_between.R
rm(list=ls())
library(tidyverse)
setwd("~/GitHub/Social_norm_meta_analysis")
papers_included<-c("2007Lis165_1a","2007Lis165_1b","2012Laz164_3","2013Kru001_1a","2013Kru001_1b","2016Kim003_7","2018Her061_9","2019Cha026_1","2019Cha026_3","2020And089_1","2020And089_2","2020Bas115_2a")
master <- read.csv("File_DB/Output/Treatment.csv") %>%
mutate(treatment_id=paste(PaperID,TreatmentCode,sep="_"))
beliefs <- read.csv("File_DB/Output/Subjects_beliefs.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
choices <- read.csv("File_DB/Output/Subjects_choices.csv", sep = ",") %>% filter(treatment_id %in% papers_included)
# interpolating beliefs for kim
## interpolation of appropriateness with scenarios out of game
beliefs_only_kim <- beliefs %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
dplyr::select(paper_id, treatment_id, subject_id, scenarios, KW_Normative, Game_type, Design) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
Game_type="DG",
Design="Between",
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
Game_type="DG",
Design="Between",
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = zoo::na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
#print(kim003_interpolation)
}
beliefs_all <- beliefs %>% plyr::rbind.fill(kim003_interpolation %>% filter(scenarios %in% seq(1,15,2)) %>% subset.data.frame(select=-c(KW_Normative_temp)))
# create table of beliefs aggregated by paper for all papers (between-subjects and within-subjects)
beliefs_aggregated <- beliefs %>% group_by(treatment_id, scenarios) %>% summarise(mean_app = mean(KW_Normative, na.rm=T), sd_app = sd(KW_Normative, na.rm = T))
# create comprehensive table with choices and beliefs
temp <- choices %>% merge.data.frame(beliefs_aggregated, by = c("treatment_id", "scenarios"), all.x = T)
final_data <- temp %>% filter(treatment_id %in% papers_included) %>% relocate(paper_id,treatment_id,subject_id,scenarios,choice,A,endowment,
mean_app,sd_app)
# create columns for models
final_data$payoff <- final_data$endowment - final_data$scenarios
final_data$other_payoff_ahead=ifelse(final_data$payoff-final_data$scenarios>0,final_data$payoff-final_data$scenarios,0)
final_data$other_payoff_behind=ifelse(final_data$scenarios-final_data$payoff>0,final_data$scenarios-final_data$payoff,0)
final_data <- final_data %>% group_by(paper_id, treatment_id, subject_id) %>% mutate(id=group_indices())
write.csv(file = "Analysis/new_data_utility.csv", x=final_data, row.names = F, na="")
## used for bootstrap
#write.csv(file="prova/Subjects_beliefs.csv", x=beliefs_all, row.names = F)
