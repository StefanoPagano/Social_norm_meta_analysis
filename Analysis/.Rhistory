log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_COEFF_ONG.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "deltaS", "deltaN", "gammaN", "rhoDA", "sigmaDA", "rhoFU", "sigmaFU", "gammaFU")
observation <- read.csv("../../new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
df_coeff <- df_coeff %>% filter(treatment_id != "2018Her061_9" & treatment_id != "2016Kim003_7") %>%
merge.data.frame(observation, by = "treatment_id")
df_coeff
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_COEFF_ONG.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "deltaS", "deltaN", "gammaN", "rhoDA", "sigmaDA", "rhoFU", "sigmaFU", "gammaFU")
observation <- read.csv("../../new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
df_coeff <- df_coeff %>% filter(treatment_id != "2018Her061_9" & treatment_id != "2016Kim003_7") %>%
merge.data.frame(observation, by = "treatment_id")
# Uncomment this if want to use
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_SE_ONG.log"
df_se <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_se) <- c("treatment_id", "se_deltaS", "se_deltaN", "se_gammaN", "se_rhoDA", "se_sigmaDA", "se_rhoFU", "se_sigmaFU", "se_gammaFU")
df_se <- df_se%>% filter(treatment_id != "2018Her061_9" & treatment_id != "2016Kim003_7") %>%
merge.data.frame(observation, by = "treatment_id") %>%
mutate(weight_SE=n^2)
# XXX CHECK ANDREA #################
# avg coefficient with inverse variance
num <- colSums(df_coeff[,2:9]/df_se[,2:9]^2)
den <- colSums(1/df_se[,2:9]^2)
ration <- data.frame(t(num/den))
df_coeff <- df_coeff %>%
add_row(treatment_id="Average", ration, n=sum(df_coeff$n), Game_type="DG")
# compute variance of coefficient (1/den)
se_average <- data.frame(t(sqrt(1/den)))
colnames(se_average) <- colnames(df_se)[2:9]
df_se <- df_se %>%
add_row(treatment_id="Average", se_average, n=sum(df_se$n), weight_SE=sum(df_se$weight_SE))
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[10,2:9] + 1.96*df_se[10,2:9]
average_ci_l <- df_coeff[10,2:9] - 1.96*df_se[10,2:9]
rbind.data.frame(average_ci_l, df_coeff[10,2:9], average_ci_u)
average_ci_l
num
den
ration
df_coeff
# compute variance of coefficient (1/den)
se_average <- data.frame(t(sqrt(1/den)))
se_average
colnames(se_average) <- colnames(df_se)[2:9]
df_se
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[10,2:9] + 1.96*df_se[10,2:9]
average_ci_l <- df_coeff[10,2:9] - 1.96*df_se[10,2:9]
average_ci_l
df_coeff
df_coeff[10,2:9]
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[8,2:9] + 1.96*df_se[8,2:9]
average_ci_l <- df_coeff[8,2:9] - 1.96*df_se[8,2:9]
average_ci_l
df_se[8,2:9]
df_se
df_se[8,2:9]
rbind.data.frame(average_ci_l, df_coeff[8,2:9], average_ci_u)
## STATA LOG FILE READING
library(tidyverse)
# 1. QUESTO SCRIPT LEGGE IL FILE LOG AIC DA STATA ---------------
## MODIFICARE SUFFISSO "_DG" CON "_ToG" O "_DON"
## MODIFICARE n_max = x, x È UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_AIC_ONG.log"
df_aic <- read_log(file=log_file,
skip=10,
n_max = 9)
colnames(df_aic) <- c("treatment_id", "Selfish_aic", "Norm_aic", "DA_aic", "FU_aic")
avg_aic <- df_aic %>%
summarise(across(Selfish_aic:FU_aic, ~mean(., na.rm=T)))
df_aic <- df_aic %>%
add_row(treatment_id="Average", avg_aic)
write.csv(df_aic, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/AIC_DG.csv", row.names = F)
# 2. QUESTO SCRIPT LEGGE IL FILE LOG COEFF DA STATA -------------
## MODIFICARE n_max = x, x è UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_COEFF_ONG.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "deltaS", "deltaN", "gammaN", "rhoDA", "sigmaDA", "rhoFU", "sigmaFU", "gammaFU")
observation <- read.csv("../../new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
df_coeff <- df_coeff %>%
merge.data.frame(observation, by = "treatment_id")
# Uncomment this if want to use obs. weights
#avg_coeff <- df_coeff %>%
#  summarise(across(deltaS:gammaFU, ~weighted.mean(., w = n, na.rm=T)))
#df_coeff <- df_coeff %>%
#  add_row(treatment_id="Average", avg_coeff, n=sum(df_coeff$n), Game_type="DG")
#QUESTO SCRIPT LEGGE IL FILE LOG STD ERR DA STATA ------
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_SE_ONG.log"
df_se <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_se) <- c("treatment_id", "se_deltaS", "se_deltaN", "se_gammaN", "se_rhoDA", "se_sigmaDA", "se_rhoFU", "se_sigmaFU", "se_gammaFU")
df_se <- df_se %>%
merge.data.frame(observation, by = "treatment_id") %>%
mutate(weight_SE=n^2)
# Uncomment this if want to use obs. weights
#avg_se <- df_se %>%
#  summarise(across(se_deltaS:se_gammaFU, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
#df_se <- df_se %>%
#  add_row(treatment_id="Average", sqrt(avg_se), n=sum(df_se$n), weight_SE=sum(df_se$weight_SE))
# XXX CHECK ANDREA #################
# avg coefficient with inverse variance
num <- colSums(df_coeff[,2:9]/df_se[,2:9]^2)
den <- colSums(1/df_se[,2:9]^2)
ration <- data.frame(t(num/den))
df_coeff <- df_coeff %>%
add_row(treatment_id="Average", ration, n=sum(df_coeff$n), Game_type="DG")
# compute variance of coefficient (1/den)
se_average <- data.frame(t(sqrt(1/den)))
colnames(se_average) <- colnames(df_se)[2:9]
df_se <- df_se %>%
add_row(treatment_id="Average", se_average, n=sum(df_se$n), weight_SE=sum(df_se$weight_SE))
##################
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[10,2:9] + 1.96*df_se[10,2:9]
average_ci_l <- df_coeff[10,2:9] - 1.96*df_se[10,2:9]
rbind.data.frame(average_ci_l, df_coeff[10,2:9], average_ci_u)
write.csv(df_models, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/MODEL_DG.csv", row.names = F)
# 3. MODELLI CON NORM UNCERTAINTY ----------------
#QUESTO SCRIPT LEGGE IL FILE LOG COEFF DA STATA
## MODIFICARE n_max = x, x è UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertain_stata_COEFF_NU.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "basegammaNU", "baseetaNU", "gammaNU", "etaNU", "sucaNU")
observation <- read.csv("../../new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
df_coeff <- df_coeff %>%
merge.data.frame(observation, by = "treatment_id")
# Uncomment this if want to use obs. weights
#avg_coeff <- df_coeff %>%
#  summarise(across(basegammaNU:sucaNU, ~weighted.mean(., w = n, na.rm=T)))
#df_coeff <- df_coeff %>%
#  add_row(treatment_id="Average", avg_coeff, n=sum(df_coeff$n), Game_type="DG")
#QUESTO SCRIPT LEGGE IL FILE LOG STD ERR DA STATA
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertain_stata_SE_NU.log"
df_se <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_se) <- c("treatment_id", "se_basegammaNU", "se_baseetaNU", "se_gammaNU", "se_etaNU", "se_sucaNU")
df_se <- df_se %>%
merge.data.frame(observation, by = "treatment_id") %>%
mutate(weight_SE=n^2)
# Uncomment this if want to use obs. weights
#avg_se <- df_se %>%
#  summarise(across(se_basegammaNU:se_sucaNU, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
#df_se <- df_se %>%
#  add_row(treatment_id="Average", sqrt(avg_se), n=sum(df_se$n), weight_SE=sum(df_se$weight_SE))
# XXX CHECK ANDREA #################
# avg coefficient with inverse variance
num <- colSums(df_coeff[,2:6]/df_se[,2:6]^2)
den <- colSums(1/df_se[,2:6]^2)
ration <- data.frame(t(num/den))
df_coeff <- df_coeff %>%
add_row(treatment_id="Average", ration, n=sum(df_coeff$n), Game_type="DG")
# compute variance of coefficient (1/den)
se_average <- data.frame(t(sqrt(1/den)))
colnames(se_average) <- colnames(df_se)[2:6]
df_se <- df_se %>%
add_row(treatment_id="Average", se_average, n=sum(df_se$n), weight_SE=sum(df_se$weight_SE))
##################
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[10,2:6] + 1.96*df_se[10,2:6]
average_ci_l <- df_coeff[10,2:6] - 1.96*df_se[10,2:6]
rbind.data.frame(average_ci_l, df_coeff[10,2:6], average_ci_u)
write.csv(df_models, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertainty_MODEL_DG.csv", row.names = F)
## STATA LOG FILE READING
library(tidyverse)
# 1. QUESTO SCRIPT LEGGE IL FILE LOG AIC DA STATA ---------------
## MODIFICARE SUFFISSO "_DG" CON "_ToG" O "_DON"
## MODIFICARE n_max = x, x ? UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_AIC_ONG.log"
df_aic <- read_log(file=log_file,
skip=10,
n_max = 9)
colnames(df_aic) <- c("treatment_id", "Selfish_aic", "Norm_aic", "DA_aic", "FU_aic")
avg_aic <- df_aic %>%
summarise(across(Selfish_aic:FU_aic, ~mean(., na.rm=T)))
df_aic <- df_aic %>%
add_row(treatment_id="Average", avg_aic)
write.csv(df_aic, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/AIC_DG.csv", row.names = F)
# 2. QUESTO SCRIPT LEGGE IL FILE LOG COEFF DA STATA -------------
## MODIFICARE n_max = x, x ? UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_COEFF_ONG.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "deltaS", "deltaN", "gammaN", "rhoDA", "sigmaDA", "rhoFU", "sigmaFU", "gammaFU")
observation <- read.csv("new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
View(df_coeff)
## STATA LOG FILE READING
library(tidyverse)
# 1. QUESTO SCRIPT LEGGE IL FILE LOG AIC DA STATA ---------------
## MODIFICARE SUFFISSO "_DG" CON "_ToG" O "_DON"
## MODIFICARE n_max = x, x ? UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_AIC_ONG.log"
df_aic <- read_log(file=log_file,
skip=10,
n_max = 9)
colnames(df_aic) <- c("treatment_id", "Selfish_aic", "Norm_aic", "DA_aic", "FU_aic")
avg_aic <- df_aic %>%
summarise(across(Selfish_aic:FU_aic, ~mean(., na.rm=T)))
df_aic <- df_aic %>%
add_row(treatment_id="Average", avg_aic)
write.csv(df_aic, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/AIC_DG.csv", row.names = F)
# 2. QUESTO SCRIPT LEGGE IL FILE LOG COEFF DA STATA -------------
## MODIFICARE n_max = x, x ? UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_COEFF_ONG.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "deltaS", "deltaN", "gammaN", "rhoDA", "sigmaDA", "rhoFU", "sigmaFU", "gammaFU")
observation <- read.csv("new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
observation <- read.csv("../../new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
df_coeff <- df_coeff %>%
merge.data.frame(observation, by = "treatment_id")
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/stata_SE_ONG.log"
df_se <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_se) <- c("treatment_id", "se_deltaS", "se_deltaN", "se_gammaN", "se_rhoDA", "se_sigmaDA", "se_rhoFU", "se_sigmaFU", "se_gammaFU")
# XXX CHECK ANDREA #################
# avg coefficient with inverse variance
num <- colSums(df_coeff[,2:9]*(1/df_se[,2:9]^2))
den <- colSums(1/df_se[,2:9]^2)
ration <- data.frame(t(num/den))
df_coeff <- df_coeff %>%
add_row(treatment_id="Average", ration, n=sum(df_coeff$n), Game_type="DG")
# compute variance of coefficient (1/den)
se_average <- data.frame(t(sqrt(1/den)))
colnames(se_average) <- colnames(df_se)[2:9]
df_se <- df_se %>%
add_row(treatment_id="Average", se_average)#, n=sum(df_se$n) Uncomment when using obs as weights, weight_SE=sum(df_se$weight_SE))
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[10,2:9] + 1.96*df_se[10,2:9]
average_ci_l <- df_coeff[10,2:9] - 1.96*df_se[10,2:9]
rbind.data.frame(average_ci_l, df_coeff[10,2:9], average_ci_u)
write.csv(df_models, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/MODEL_DG.csv", row.names = F)
0.50/(1-0.50)
0.51/(1-0.51)
r=0.3
r/(1-r)
r=0.336
r/(1-r)
0.52/1.52
0.093/(1-0.093)
0.093/(1+0.093)
-0.093/(1+0.093)
(1+0.093)/-0.093
# 3. MODELLI CON NORM UNCERTAINTY ----------------
#QUESTO SCRIPT LEGGE IL FILE LOG COEFF DA STATA
## MODIFICARE n_max = x, x ? UGUALE AL NUMERO DI TRATTAMENTI
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertain_stata_COEFF_NU.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "basegammaNU", "baseetaNU", "gammaNU", "etaNU", "sucaNU")
observation <- read.csv("new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertain_stata_COEFF_NU.log"
df_coeff <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_coeff) <- c("treatment_id", "basegammaNU", "baseetaNU", "gammaNU", "etaNU", "sucaNU")
observation <- read.csv("../../new_data_utility.csv") %>% distinct(treatment_id,subject_id,Game_type) %>% group_by(treatment_id,Game_type) %>% tally()
df_coeff <- df_coeff %>%
merge.data.frame(observation, by = "treatment_id")
# Uncomment this if want to use obs. weights
#avg_coeff <- df_coeff %>%
#  summarise(across(basegammaNU:sucaNU, ~weighted.mean(., w = n, na.rm=T)))
#df_coeff <- df_coeff %>%
#  add_row(treatment_id="Average", avg_coeff, n=sum(df_coeff$n), Game_type="DG")
#QUESTO SCRIPT LEGGE IL FILE LOG STD ERR DA STATA
log_file = "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertain_stata_SE_NU.log"
df_se <- read_log(file=log_file,
skip=10,
n_max = 9,
col_types=cols("c","n","n","n","n","n","n","n","n","n","n","n","n"))
colnames(df_se) <- c("treatment_id", "se_basegammaNU", "se_baseetaNU", "se_gammaNU", "se_etaNU", "se_sucaNU")
#df_se <- df_se %>%
#  merge.data.frame(observation, by = "treatment_id") %>%
#  mutate(weight_SE=n^2)
# Uncomment this if want to use obs. weights
#avg_se <- df_se %>%
#  summarise(across(se_basegammaNU:se_sucaNU, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
#df_se <- df_se %>%
#  add_row(treatment_id="Average", sqrt(avg_se), n=sum(df_se$n), weight_SE=sum(df_se$weight_SE))
# XXX CHECK ANDREA #################
# avg coefficient with inverse variance
num <- colSums(df_coeff[,2:6]/df_se[,2:6]^2)
den <- colSums(1/df_se[,2:6]^2)
ration <- data.frame(t(num/den))
df_coeff <- df_coeff %>%
add_row(treatment_id="Average", ration, n=sum(df_coeff$n), Game_type="DG")
# compute variance of coefficient (1/den)
se_average <- data.frame(t(sqrt(1/den)))
colnames(se_average) <- colnames(df_se)[2:6]
df_se <- df_se %>%
add_row(treatment_id="Average", se_average)#, n=sum(df_se$n) Uncomment if using obs as weights, weight_SE=sum(df_se$weight_SE))
##################
# produce 95% CI of averages
df_models <- merge.data.frame(df_coeff, df_se, by = "treatment_id")
average_ci_u <- df_coeff[10,2:6] + 1.96*df_se[10,2:6]
average_ci_l <- df_coeff[10,2:6] - 1.96*df_se[10,2:6]
rbind.data.frame(average_ci_l, df_coeff[10,2:6], average_ci_u)
write.csv(df_models, "~/GitHub/Social_norm_meta_analysis/Analysis/Utility estimation/Output/Logs/uncertainty_MODEL_DG.csv", row.names = F)
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(ggbreak)
library(patchwork)
setwd("~/GitHub/Social_norm_meta_analysis/Analysis/")
## Define functions to plot ------------
model_df_generator <- function(file, uncertainty_model) {
df <- read.csv(file)
#
#  df <- df %>%
#    mutate(weight_SE=(n.x)^2)
#  if (uncertainty_model==0) {
#
#    average_coeff_stata <- df %>% summarise(across(deltaS:gammaFU, ~weighted.mean(., w = n.x, na.rm=T)))
#    average_SE_stata <- df %>% summarise(across(se_deltaS:se_gammaFU, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
#
#  } else {
#    average_coeff_stata <- df %>% summarise(across(basegammaNU:sucaNU, ~weighted.mean(., w = n.x, na.rm=T)))
#    average_SE_stata <- df %>% summarise(across(se_basegammaNU:se_sucaNU, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
#
#  }
#  df <- df %>%
#    add_row(treatment_id="Average", average_coeff_stata , sqrt(average_SE_stata), n.x=sum(df$n.x), weight_SE=sum(df$weight_SE))
#
invisible(df)
}
plot_coeff_social_generator <- function(data) {
s=0.2
# selfish model
plot_s_delta <- ggplot(data, aes(x=deltaS,y=treatment_id)) +
geom_pointrange(aes(xmin=deltaS-1.96*se_deltaS,xmax=deltaS+1.96*se_deltaS), shape=20, size = s) +
ylab("Treatment ID") +
xlab("S model - Coefficient of payoff (delta)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
# Social norm model (SN)
plot_sn_delta <- ggplot(data, aes(x=deltaN,y=treatment_id)) +
geom_pointrange(aes(xmin=deltaN-1.96*se_deltaN,xmax=deltaN+1.96*se_deltaN), shape=20, size=s) +
ylab("Treatment ID") +
xlab(expression(delta)) +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_sn_gamma <- ggplot(data, aes(x=gammaN,y=treatment_id)) +
geom_pointrange(aes(xmin=gammaN-1.96*se_gammaN,xmax=gammaN+1.96*se_gammaN), shape=20, size=s) +
xlab(expression(gamma)) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
# Social preferences models
plot_da_rho <- ggplot(data, aes(x=rhoDA,y=treatment_id)) +
geom_pointrange(aes(xmin=rhoDA-1.96*se_rhoDA,xmax=rhoDA+1.96*se_rhoDA), shape=20, size=s) +
ylab("Treatment ID") +
xlab(expression(rho)) +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_da_sigma <- ggplot(data, aes(x=sigmaDA,y=treatment_id)) +
geom_pointrange(aes(xmin=sigmaDA-1.96*se_sigmaDA,xmax=sigmaDA+1.96*se_sigmaDA), shape=20, size=s) +
xlab(expression(sigma)) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0) #xlim(c(-1,1))
# Full model (social preferences and social norms)
plot_fu_rho <- ggplot(data, aes(x=rhoFU,y=treatment_id)) +
geom_pointrange(aes(xmin=rhoFU-1.96*se_rhoFU,xmax=rhoFU+1.96*se_rhoFU), shape=20, size=s) +
ylab("Treatment ID") +
xlab(expression(rho)) +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_fu_sigma <- ggplot(data, aes(x=sigmaFU,y=treatment_id)) +
geom_pointrange(aes(xmin=sigmaFU-1.96*se_sigmaFU,xmax=sigmaFU+1.96*se_sigmaFU), shape=20, size=s) +
xlab(expression(sigma)) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_fu_gamma <- ggplot(data, aes(x=gammaFU,y=treatment_id)) +
geom_pointrange(aes(xmin=gammaFU-1.96*se_gammaFU,xmax=gammaFU+1.96*se_gammaFU), shape=20, size=s) +
xlab(expression(gamma)) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_da <- ggarrange(plot_da_rho, plot_da_sigma, common.legend=T, legend="bottom", widths = c(8,6))
plot_sn <- ggarrange(plot_sn_delta, plot_sn_gamma, common.legend=T, legend="bottom", widths = c(8,6))
plot_sn <- annotate_figure(plot_sn, top = text_grob("Social Norm model", face = "bold", size = 14))
plot_da <- annotate_figure(plot_da, top = text_grob("Social Preferences model", face = "bold", size = 14))
plot_fu <- ggarrange(plot_fu_rho, plot_fu_sigma, plot_fu_gamma, nrow = 1, common.legend=T, legend="bottom", widths = c(9,6,6))
plot_fu <- annotate_figure(plot_fu, top = text_grob("Full model", face = "bold", size = 14))
#final_plot <- ggarrange(plot_sn, plot_da, plot_fu, ncol = 1)
return(list(plot_sn, plot_da, plot_fu))
}
plot_coeff_social_generator_uncertainty <- function(data){
s=0.2
# base model
plot_gamma <-  ggplot(data, aes(x=basegammaNU,y=treatment_id)) +
geom_pointrange(aes(xmin=basegammaNU-1.96*se_basegammaNU,xmax=basegammaNU+1.96*se_basegammaNU), shape=20, size=s) +
xlab(expression(gamma)) +
theme_light() +
ylab("Treatment ID") +
theme(#axis.text.y=element_blank(),
#axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_eta <-  ggplot(data, aes(x=baseetaNU,y=treatment_id)) +
geom_pointrange(aes(xmin=baseetaNU-1.96*se_baseetaNU,xmax=baseetaNU+1.96*se_baseetaNU), shape=20, size=s) +
xlab(expression(eta)) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
# model with interaction term
plot_gamma_i <-  ggplot(data, aes(x=gammaNU,y=treatment_id)) +
geom_pointrange(aes(xmin=gammaNU-1.96*se_gammaNU,xmax=gammaNU+1.96*se_gammaNU), shape=20, size=s) +
xlab(expression(gamma)) +
theme_light() +
ylab("Treatment ID") +
theme(#axis.text.y=element_blank(),
#axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_eta_i <-  ggplot(data, aes(x=etaNU,y=treatment_id)) +
geom_pointrange(aes(xmin=etaNU-1.96*se_etaNU,xmax=etaNU+1.96*se_etaNU), shape=20, size=s) +
xlab(expression(eta)) +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_interaction <-  ggplot(data, aes(x=sucaNU,y=treatment_id)) +
geom_pointrange(aes(xmin=sucaNU-1.96*se_sucaNU,xmax=sucaNU+1.96*se_sucaNU), shape=20, size=s) +
xlab("Interaction term") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_nu <- ggarrange(plot_gamma, plot_eta, common.legend=T, legend="bottom", widths = c(8,6))
plot_nu_i <- ggarrange(plot_gamma_i, plot_eta_i, plot_interaction, nrow=1, common.legend=T, legend="bottom", widths = c(8,6,6))
return(list(plot_nu, plot_nu_i))
}
## Plot coefficients -----------
stata_output_model <- read.csv("Utility estimation/Output/Logs/MODEL_DG.csv")
plots <- plot_coeff_social_generator(stata_output_model)
plot_sn <- plots[[1]]
plot_da <- plots[[2]]
plot_fu <- plots[[3]]
ggsave(filename = "Utility estimation/Output/Figures/model_social_norm.pdf", plot = plot_sn, width = 800, height = 400, units = "px", dpi = 120)
ggsave(filename = "Utility estimation/Output/Figures/model_social_preferences.pdf", plot=plot_da, width = 800, height = 400, units = "px", dpi = 120)
ggsave(filename = "Utility estimation/Output/Figures/model_full.pdf", plot=plot_fu, width = 800, height = 400, units = "px", dpi = 120)
stata_output_model_u <- read.csv("Utility estimation/Output/Logs/uncertainty_MODEL_DG.csv")
plots <- plot_coeff_social_generator_uncertainty(stata_output_model_u)
ggsave(filename = "Utility estimation/Output/Figures/unc_model_social_norm.pdf", plot = plots[[1]], width = 800, height = 400, units = "px", dpi = 120)
ggsave(filename = "Utility estimation/Output/Figures/unc_model_social_norm_interaction.pdf", plot=plots[[2]], width = 800, height = 400, units = "px", dpi = 120)
