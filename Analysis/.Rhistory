# read file beliefs and choices
choices_aic_analysis <- choices  %>%
filter(treatment_id %in% levels(as.factor(paste(master_aic_analysis$PaperID,"_",master_aic_analysis$TreatmentCode, sep=""))))
choices_aic_analysis <- choices_aic_analysis %>% mutate(payoff=endowment-scenarios,
other_payoff_ahead=ifelse(payoff-scenarios>0,payoff-scenarios,0),
other_payoff_behind=ifelse(scenarios-payoff>0,scenarios-payoff,0),
sqr_other_payoff_ahead=other_payoff_ahead^2,
sqr_other_payoff_behind=other_payoff_behind^2)
beliefs_aic_analysis <- beliefs %>%
filter(treatment_id %in% levels(as.factor(paste(master_aic_analysis$PaperID,"_",master_aic_analysis$TreatmentCode, sep=""))))
beliefs_only_kim <- beliefs_aic_analysis %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
select(paper_id, treatment_id, subject_id, scenarios, KW_Normative) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
}
beliefs_aic_analysis <- beliefs_aic_analysis %>%
select(paper_id, treatment_id, subject_id, scenarios, KW_Normative) %>%
filter(paper_id != "2016Kim003") %>%
rbind.data.frame(kim003_interpolation %>% select(-KW_Normative_temp))
mean_beliefs_aic_analysis <- beliefs_aic_analysis %>%
group_by(treatment_id, scenarios) %>%
summarise(mean_app = mean(KW_Normative),
sd_app = sd(KW_Normative),
log_sd_app = log(sd_app))
utility_df_treatment_aic_analysis <- choices_aic_analysis %>%
merge.data.frame(mean_beliefs_aic_analysis) %>%
arrange(paper_id,treatment_id,subject_id,scenarios) %>%
relocate(paper_id,treatment_id,subject_id,scenarios,choice,A,endowment,
payoff,mean_app,sd_app)
utility_df_treatment_aic_analysis$id = utility_df_treatment_aic_analysis %>% group_indices(subject_id)
# function
comparison_aic = function(treatment) {
df_master <- utility_df_treatment_aic_analysis %>%
filter(treatment_id==treatment)
social_expectation_model=clogit(A ~ payoff + mean_app + strata(subject_id),
data=df_master)
# boot.clogit <- function(data, indices){
# new_data <- data[indices,]
# mod <- clogit(A ~ payoff + mean_app + strata(subject_id), data = new_data, x=T, y=T)
# coefficients(mod)
# }
#
# boot_data <- boot(data=ciao, statistic=boot.clogit, R=1000)
social_delta = as.numeric(social_expectation_model$coefficients[1])
social_gamma = as.numeric(social_expectation_model$coefficients[2])
social_delta_se = coef(summary(social_expectation_model))[1, "se(coef)"]
social_gamma_se = coef(summary(social_expectation_model))[2, "se(coef)"]
inequality_aversion_model=clogit(A ~ payoff + abs(other_payoff_behind) + strata(subject_id),
data=df_master)
inequality_alpha = as.numeric(inequality_aversion_model$coefficients[1])
inequality_beta = as.numeric(inequality_aversion_model$coefficients[2])
inequality_alpha_se = coef(summary(inequality_aversion_model))[1, "se(coef)"]
inequality_beta_se = coef(summary(inequality_aversion_model))[2, "se(coef)"]
inequality_aversion_sqr_model=clogit(A ~ payoff + abs(other_payoff_behind) + sqr_other_payoff_ahead + strata(subject_id),
data=df_master)
inequality_sqr_alpha = as.numeric(inequality_aversion_sqr_model$coefficients[1])
inequality_sqr_beta = as.numeric(inequality_aversion_sqr_model$coefficients[2])
inequality_sqr_alpha2 = as.numeric(inequality_aversion_sqr_model$coefficients[3])
#inequality_sqr_beta2 = as.numeric(inequality_aversion_sqr_model$coefficients[4])
inequality_sqr_alpha_se = coef(summary(inequality_aversion_sqr_model))[1, "se(coef)"]
inequality_sqr_beta_se = coef(summary(inequality_aversion_sqr_model))[2, "se(coef)"]
inequality_sqr_alpha2_se = coef(summary(inequality_aversion_sqr_model))[3, "se(coef)"]
#inequality_sqr_beta2_se = coef(summary(inequality_aversion_sqr_model))[4, "se(coef)"]
models <- list(social_expectation_model,inequality_aversion_model, inequality_aversion_sqr_model)
model.names <- c('social expectation', 'inequality aversion', "inequality sqr")
aic_comp_t <- aictab(cand.set = models, modnames = model.names)
row.names(aic_comp_t) <- aic_comp_t[,1]
paper_and_aic_coeff <- list(treatment,
aic_comp_t,
social_delta,
social_gamma,
social_delta_se,
social_gamma_se,
inequality_alpha,
inequality_beta,
inequality_alpha_se,
inequality_beta_se,
inequality_sqr_alpha,
inequality_sqr_beta,
inequality_sqr_alpha2,
#inequality_sqr_beta2,
inequality_sqr_alpha_se,
inequality_sqr_beta_se,
inequality_sqr_alpha2_se,
#inequality_sqr_beta2_se,
models)
names(paper_and_aic_coeff) <- c("treatment",
"aic_comp_t",
"social_delta",
"social_gamma",
"social_delta_se",
"social_gamma_se",
"inequality_alpha",
"inequality_beta",
"inequality_alpha_se",
"inequality_beta_se",
"inequality_sqr_alpha",
"inequality_sqr_beta",
"inequality_sqr_alpha2",
#"inequality_sqr_beta2",
"inequality_sqr_alpha_se",
"inequality_sqr_beta_se",
"inequality_sqr_alpha2_se",
#"inequality_sqr_beta2_se",
"models")
invisible(paper_and_aic_coeff)
}
aic_table <-data.frame()
social_coeff <- data.frame()
models <- list()
names_model <- c()
for (t in levels(as.factor(utility_df_treatment_aic_analysis$treatment_id))) {
x = comparison_aic(t)
treatment = x[[1]]
delta_se_ia_aic = x[[2]][["social expectation",3]] - x[[2]][["inequality aversion",3]]
delta_ia_iasqr_aic = x[[2]][["inequality aversion",3]] - x[[2]][["inequality sqr",3]]
delta_se_iasqr_aic = x[[2]][["social expectation",3]] - x[[2]][["inequality sqr",3]]
aic_table <- aic_table %>%
rbind.data.frame(data.frame(treatment_id = treatment,
Delta_SE_IA_AIC = delta_se_ia_aic,
Delta_IA_IASQR_AIC = delta_ia_iasqr_aic,
Delta_SE_IASQR_AIC = delta_se_iasqr_aic))
social_coeff <- social_coeff %>%
rbind.data.frame(data.frame(treatment_id = treatment,
i_alpha = x$inequality_alpha,
i_beta= x$inequality_beta,
ia_sqr_alpha = x$inequality_sqr_alpha,
ia_sqr_beta= x$inequality_sqr_beta,
ia_sqr_alpha2 = x$inequality_sqr_alpha2,
#ia_sqr_beta2= x$inequality_sqr_beta2,
s_delta = x$social_delta,
s_gamma= x$social_gamma,
i_SE_alpha= x$inequality_alpha_se,
i_SE_beta= x$inequality_beta_se,
ia_sqr_SE_alpha= x$inequality_sqr_alpha_se,
ia_sqr_SE_beta= x$inequality_sqr_beta_se,
ia_sqr_SE_alpha2= x$inequality_sqr_alpha2_se,
#ia_sqr_SE_beta2= x$inequality_sqr_beta2_se,
s_SE_delta= x$social_delta_se,
s_SE_gamma= x$social_gamma_se))
models[[length(models)+1]] <- x$models
names_model <- append(names_model, x$treatment)
}
names(models) <- names_model
aic_table <- aic_table %>%
mutate(Best_model_se_ia=ifelse(Delta_SE_IA_AIC<0,"Social Expectation", "Inequality Aversion"),
Best_model_ia_iasqr=ifelse(Delta_IA_IASQR_AIC<0,"Inequality Aversion", "Inequality sqr"),
Best_model_se_iasqr=ifelse(Delta_SE_IASQR_AIC<0,"Social Expectation", "Inequality sqr")) %>%
left_join(master %>% select(treatment_id, Game_type), by = "treatment_id") %>%
arrange(Game_type)
n_subject <- choices %>%
group_by(treatment_id) %>%
summarise(n=length(unique(subject_id)))
social_coeff <- social_coeff %>%
left_join(master %>% select(treatment_id, Game_type), by = "treatment_id") %>%
left_join(n_subject, by = "treatment_id") %>%
mutate(i_SE_beta=ifelse(i_SE_beta>100, NA, i_SE_beta),
ia_sqr_SE_beta=ifelse(ia_sqr_SE_beta>100, NA, ia_sqr_SE_beta),
#ia_sqr_SE_beta2=ifelse(ia_sqr_SE_beta2>100, NA, ia_sqr_SE_beta2),
weight_SE=(n)^2)
average_coeff <- social_coeff %>% summarise(across(i_alpha:s_gamma, ~weighted.mean(., w = n, na.rm=T)))
average_SE <- social_coeff %>% summarise(across(i_SE_alpha:s_SE_gamma, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
social_coeff <- social_coeff %>%
add_row(treatment_id="Average", average_coeff , sqrt(average_SE), Game_type="Average", n=sum(social_coeff$n), weight_SE=sum(social_coeff$weight_SE))
ggplot(data = aic_table, aes(Delta_SE_IA_AIC, fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_col(aes(fill=Best_model_se_ia)) +
xlim(-max(abs(aic_table$Delta_SE_IA_AIC))*1.2,max(abs(aic_table$Delta_SE_IA_AIC))*1.2) +
xlab("AIC Delta") +
ylab("Treatment") +
labs(title = "Social expectation vs Inequality Aversion model")+
theme_light() +
theme(legend.position="bottom",
strip.text.x = element_text(size = 12, color = "black", face = "bold.italic"),
strip.background = element_blank()) +
scale_fill_brewer(palette="Set1") +
facet_wrap(~Game_type) +
geom_point(shape=1) +
geom_vline(xintercept = 0)
ggplot(data = aic_table, aes(Delta_IA_IASQR_AIC, fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_col(aes(fill=Best_model_ia_iasqr)) +
xlim(-max(abs(aic_table$Delta_IA_IASQR_AIC))*1.2,max(abs(aic_table$Delta_IA_IASQR_AIC))*1.2) +
xlab("AIC Delta") +
ylab("Treatment") +
labs(title = "Inequality Aversion model vs Inequality sqr model")+
theme_light() +
theme(legend.position="bottom",
strip.text.x = element_text(size = 12, color = "black", face = "bold.italic"),
strip.background = element_blank()) +
scale_fill_brewer(palette="Set1") +
facet_wrap(~Game_type) +
geom_point(shape=1) +
geom_vline(xintercept = 0)
ggplot(data = aic_table, aes(Delta_SE_IASQR_AIC, fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_col(aes(fill=Best_model_se_iasqr)) +
xlim(-max(abs(aic_table$Delta_SE_IASQR_AIC))*1.2,max(abs(aic_table$Delta_SE_IASQR_AIC))*1.2) +
xlab("AIC Delta") +
ylab("Treatment") +
labs(title = "Social expectation vs Inequality sqr model")+
theme_light() +
theme(legend.position="bottom",
strip.text.x = element_text(size = 12, color = "black", face = "bold.italic"),
strip.background = element_blank()) +
scale_fill_brewer(palette="Set1") +
facet_wrap(~Game_type) +
geom_point(shape=1) +
geom_vline(xintercept = 0)
# social expectation model
plot_s_delta <- ggplot(social_coeff, aes(x=s_delta,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=s_delta-2*s_SE_delta,xmax=s_delta+2*s_SE_delta, color=Game_type), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of payoff (delta)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_s_gamma <- ggplot(social_coeff, aes(x=s_gamma,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=s_gamma-2*s_SE_gamma,xmax=s_gamma+2*s_SE_gamma, color=Game_type), shape=20) +
xlab("Coefficient of norm expectation (gamma)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_s_delta, plot_s_gamma, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
# inequality aversion model
plot_i_alpha <- ggplot(social_coeff, aes(x=i_alpha,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=i_alpha-2*i_SE_alpha,xmax=i_alpha+2*i_SE_alpha, color=Game_type), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff ahead (alpha)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_i_beta <- ggplot(social_coeff, aes(x=i_beta,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=i_beta-2*i_SE_beta,xmax=i_beta+2*i_SE_beta, color=Game_type), shape=20) +
xlab("Coefficient of other payoff behind (beta)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
ggarrange(plot_i_alpha, plot_i_beta, ncol = 2, common.legend=T, legend="bottom", widths = c(8,6))
# inequality aversion sqr model
plot_ia_sqr_alpha <- ggplot(social_coeff, aes(x=ia_sqr_alpha,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=ia_sqr_alpha-2*ia_sqr_SE_alpha,xmax=ia_sqr_alpha+2*ia_sqr_SE_alpha, color=Game_type), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff ahead (alpha)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_ia_sqr_beta <- ggplot(social_coeff, aes(x=ia_sqr_beta,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=ia_sqr_beta-2*ia_sqr_SE_beta,xmax=ia_sqr_beta+2*ia_sqr_SE_beta, color=Game_type), shape=20) +
ylab("Treatment ID") +
xlab("Coefficient of other payoff behind (beta)") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
plot_ia_sqr_alpha2 <- ggplot(social_coeff, aes(x=ia_sqr_alpha2,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
geom_pointrange(aes(xmin=ia_sqr_alpha2-2*ia_sqr_SE_alpha2,xmax=ia_sqr_alpha2+2*ia_sqr_SE_alpha2, color=Game_type), shape=20) +
xlab("Coefficient of other payoff behind (alpha2)") +
theme_light() +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_vline(xintercept = 0)
# plot_ia_sqr_beta2 <- ggplot(social_coeff, aes(x=ia_sqr_beta2,y=fct_rev(fct_reorder(treatment_id, Game_type)))) +
#   geom_pointrange(aes(xmin=ia_sqr_beta2-2*ia_sqr_SE_beta2,xmax=ia_sqr_beta2+2*ia_sqr_SE_beta2, color=Game_type), shape=20) +
#   xlab("Coefficient of other payoff behind (beta2)") +
#   theme_light() +
#   theme(axis.text.y=element_blank(),
#         axis.title.y=element_blank(),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank()) +
#   geom_vline(xintercept = 0)
ggarrange(plot_ia_sqr_alpha, plot_ia_sqr_alpha2, plot_ia_sqr_beta, ncol = 2, nrow = 2, common.legend=T, legend="bottom", widths = c(8,6))
master_aic_analysis <- master %>%
filter(Game_type %in% c("DG")) %>%
subset.data.frame(subset = !(Standard_game %in% c("N")) &
Choice_Method != "OnlyNorms" &
StatusTreatment_Roma == "6-Complete" &
Baseline %in% c(NA, 1)) %>%
mutate(treatment_id = paste(PaperID,"_",TreatmentCode,sep=""))
# read file beliefs and choices
choices_aic_analysis <- choices  %>%
filter(treatment_id %in% levels(as.factor(paste(master_aic_analysis$PaperID,"_",master_aic_analysis$TreatmentCode, sep=""))))
choices_aic_analysis <- choices_aic_analysis %>% mutate(payoff=endowment-scenarios,
other_payoff_ahead=ifelse(payoff-scenarios>0,payoff-scenarios,0),
other_payoff_behind=ifelse(scenarios-payoff>0,scenarios-payoff,0),
sqr_other_payoff_ahead=other_payoff_ahead^2,
sqr_other_payoff_behind=other_payoff_behind^2)
beliefs_aic_analysis <- beliefs %>%
filter(treatment_id %in% levels(as.factor(paste(master_aic_analysis$PaperID,"_",master_aic_analysis$TreatmentCode, sep=""))))
beliefs_only_kim <- beliefs_aic_analysis %>%
filter(paper_id == "2016Kim003" & treatment_id == "2016Kim003_7") %>%
select(paper_id, treatment_id, subject_id, scenarios, KW_Normative) %>%
mutate(KW_Normative_temp = KW_Normative)
n_subj = length(levels(as.factor(beliefs_only_kim$subject_id)))
kim003_interpolation <- data.frame(paper_id=NA,
treatment_id=NA,
subject_id = NA,
scenarios=NA,
KW_Normative=NA,
KW_Normative_temp=NA)
for (subj in levels(as.factor(beliefs_only_kim$subject_id))) {
subj_df <- data.frame(paper_id="2016Kim003",
treatment_id="2016Kim003_7",
subject_id = subj,
scenarios=seq(1,15,2),
KW_Normative = NA,
KW_Normative_temp=NA)
subj_beliefs <- beliefs_only_kim %>%
filter(subject_id == subj)
#print(subj_beliefs)
subj_beliefs <- subj_beliefs %>%
rbind.data.frame(subj_df) %>%
arrange(paper_id, treatment_id, subject_id, scenarios) %>%
mutate(KW_Normative = na.approx(KW_Normative_temp,
maxgap = 1,
rule = 1))
kim003_interpolation <- subj_beliefs %>%
rbind.data.frame(kim003_interpolation)
}
beliefs_aic_analysis <- beliefs_aic_analysis %>%
select(paper_id, treatment_id, subject_id, scenarios, KW_Normative) %>%
filter(paper_id != "2016Kim003") %>%
rbind.data.frame(kim003_interpolation %>% select(-KW_Normative_temp))
mean_beliefs_aic_analysis <- beliefs_aic_analysis %>%
group_by(treatment_id, scenarios) %>%
summarise(mean_app = mean(KW_Normative),
sd_app = sd(KW_Normative),
log_sd_app = log(sd_app))
utility_df_treatment_aic_analysis <- choices_aic_analysis %>%
merge.data.frame(mean_beliefs_aic_analysis) %>%
arrange(paper_id,treatment_id,subject_id,scenarios) %>%
relocate(paper_id,treatment_id,subject_id,scenarios,choice,A,endowment,
payoff,mean_app,sd_app)
utility_df_treatment_aic_analysis$id = utility_df_treatment_aic_analysis %>% group_indices(subject_id)
# function
comparison_aic = function(treatment) {
df_master <- utility_df_treatment_aic_analysis %>%
filter(treatment_id==treatment)
social_expectation_model=clogit(A ~ payoff + mean_app + strata(subject_id),
data=df_master)
# boot.clogit <- function(data, indices){
# new_data <- data[indices,]
# mod <- clogit(A ~ payoff + mean_app + strata(subject_id), data = new_data, x=T, y=T)
# coefficients(mod)
# }
#
# boot_data <- boot(data=ciao, statistic=boot.clogit, R=1000)
social_delta = as.numeric(social_expectation_model$coefficients[1])
social_gamma = as.numeric(social_expectation_model$coefficients[2])
social_delta_se = coef(summary(social_expectation_model))[1, "se(coef)"]
social_gamma_se = coef(summary(social_expectation_model))[2, "se(coef)"]
inequality_aversion_model=clogit(A ~ payoff + abs(other_payoff_behind) + strata(subject_id),
data=df_master)
inequality_alpha = as.numeric(inequality_aversion_model$coefficients[1])
inequality_beta = as.numeric(inequality_aversion_model$coefficients[2])
inequality_alpha_se = coef(summary(inequality_aversion_model))[1, "se(coef)"]
inequality_beta_se = coef(summary(inequality_aversion_model))[2, "se(coef)"]
inequality_aversion_sqr_model=clogit(A ~ payoff + abs(other_payoff_behind) + sqr_other_payoff_ahead + strata(subject_id),
data=df_master)
inequality_sqr_alpha = as.numeric(inequality_aversion_sqr_model$coefficients[1])
inequality_sqr_beta = as.numeric(inequality_aversion_sqr_model$coefficients[2])
inequality_sqr_alpha2 = as.numeric(inequality_aversion_sqr_model$coefficients[3])
#inequality_sqr_beta2 = as.numeric(inequality_aversion_sqr_model$coefficients[4])
inequality_sqr_alpha_se = coef(summary(inequality_aversion_sqr_model))[1, "se(coef)"]
inequality_sqr_beta_se = coef(summary(inequality_aversion_sqr_model))[2, "se(coef)"]
inequality_sqr_alpha2_se = coef(summary(inequality_aversion_sqr_model))[3, "se(coef)"]
#inequality_sqr_beta2_se = coef(summary(inequality_aversion_sqr_model))[4, "se(coef)"]
models <- list(social_expectation_model,inequality_aversion_model, inequality_aversion_sqr_model)
model.names <- c('social expectation', 'inequality aversion', "inequality sqr")
aic_comp_t <- aictab(cand.set = models, modnames = model.names)
row.names(aic_comp_t) <- aic_comp_t[,1]
paper_and_aic_coeff <- list(treatment,
aic_comp_t,
social_delta,
social_gamma,
social_delta_se,
social_gamma_se,
inequality_alpha,
inequality_beta,
inequality_alpha_se,
inequality_beta_se,
inequality_sqr_alpha,
inequality_sqr_beta,
inequality_sqr_alpha2,
#inequality_sqr_beta2,
inequality_sqr_alpha_se,
inequality_sqr_beta_se,
inequality_sqr_alpha2_se,
#inequality_sqr_beta2_se,
models)
names(paper_and_aic_coeff) <- c("treatment",
"aic_comp_t",
"social_delta",
"social_gamma",
"social_delta_se",
"social_gamma_se",
"inequality_alpha",
"inequality_beta",
"inequality_alpha_se",
"inequality_beta_se",
"inequality_sqr_alpha",
"inequality_sqr_beta",
"inequality_sqr_alpha2",
#"inequality_sqr_beta2",
"inequality_sqr_alpha_se",
"inequality_sqr_beta_se",
"inequality_sqr_alpha2_se",
#"inequality_sqr_beta2_se",
"models")
invisible(paper_and_aic_coeff)
}
aic_table <-data.frame()
social_coeff <- data.frame()
models <- list()
names_model <- c()
for (t in levels(as.factor(utility_df_treatment_aic_analysis$treatment_id))) {
x = comparison_aic(t)
treatment = x[[1]]
delta_se_ia_aic = x[[2]][["social expectation",3]] - x[[2]][["inequality aversion",3]]
delta_ia_iasqr_aic = x[[2]][["inequality aversion",3]] - x[[2]][["inequality sqr",3]]
delta_se_iasqr_aic = x[[2]][["social expectation",3]] - x[[2]][["inequality sqr",3]]
aic_table <- aic_table %>%
rbind.data.frame(data.frame(treatment_id = treatment,
Delta_SE_IA_AIC = delta_se_ia_aic,
Delta_IA_IASQR_AIC = delta_ia_iasqr_aic,
Delta_SE_IASQR_AIC = delta_se_iasqr_aic))
social_coeff <- social_coeff %>%
rbind.data.frame(data.frame(treatment_id = treatment,
i_alpha = x$inequality_alpha,
i_beta= x$inequality_beta,
ia_sqr_alpha = x$inequality_sqr_alpha,
ia_sqr_beta= x$inequality_sqr_beta,
ia_sqr_alpha2 = x$inequality_sqr_alpha2,
#ia_sqr_beta2= x$inequality_sqr_beta2,
s_delta = x$social_delta,
s_gamma= x$social_gamma,
i_SE_alpha= x$inequality_alpha_se,
i_SE_beta= x$inequality_beta_se,
ia_sqr_SE_alpha= x$inequality_sqr_alpha_se,
ia_sqr_SE_beta= x$inequality_sqr_beta_se,
ia_sqr_SE_alpha2= x$inequality_sqr_alpha2_se,
#ia_sqr_SE_beta2= x$inequality_sqr_beta2_se,
s_SE_delta= x$social_delta_se,
s_SE_gamma= x$social_gamma_se))
models[[length(models)+1]] <- x$models
names_model <- append(names_model, x$treatment)
}
names(models) <- names_model
aic_table <- aic_table %>%
mutate(Best_model_se_ia=ifelse(Delta_SE_IA_AIC<0,"Social Expectation", "Inequality Aversion"),
Best_model_ia_iasqr=ifelse(Delta_IA_IASQR_AIC<0,"Inequality Aversion", "Inequality sqr"),
Best_model_se_iasqr=ifelse(Delta_SE_IASQR_AIC<0,"Social Expectation", "Inequality sqr")) %>%
left_join(master %>% select(treatment_id, Game_type), by = "treatment_id") %>%
arrange(Game_type)
n_subject <- choices %>%
group_by(treatment_id) %>%
summarise(n=length(unique(subject_id)))
social_coeff <- social_coeff %>%
left_join(master %>% select(treatment_id, Game_type), by = "treatment_id") %>%
left_join(n_subject, by = "treatment_id") %>%
mutate(i_SE_beta=ifelse(i_SE_beta>100, NA, i_SE_beta),
ia_sqr_SE_beta=ifelse(ia_sqr_SE_beta>100, NA, ia_sqr_SE_beta),
#ia_sqr_SE_beta2=ifelse(ia_sqr_SE_beta2>100, NA, ia_sqr_SE_beta2),
weight_SE=(n)^2)
average_coeff <- social_coeff %>% summarise(across(i_alpha:s_gamma, ~weighted.mean(., w = n, na.rm=T)))
average_SE <- social_coeff %>% summarise(across(i_SE_alpha:s_SE_gamma, ~weighted.mean(.^2, w = weight_SE, na.rm=T)))
social_coeff <- social_coeff %>%
add_row(treatment_id="Average", average_coeff , sqrt(average_SE), Game_type="Average", n=sum(social_coeff$n), weight_SE=sum(social_coeff$weight_SE))
inequality_aversion_sqr_model=clogit(A ~ payoff + abs(other_payoff_behind) + sqr_other_payoff_ahead + strata(subject_id),
data=df_master)
o
inequality_aversion_model=clogit(A ~ payoff + abs(other_payoff_behind) + strata(subject_id),
data=df_master)
as.numeric(inequality_aversion_model$coefficients[1])
inequality_aversion_model
summary(inequality_aversion_model)
View(utility_df_treatment_aic_analysis)
getwd()
write.csv(utility_df_treatment_aic_analysis, file="data_utility.csv", row.names = F)
